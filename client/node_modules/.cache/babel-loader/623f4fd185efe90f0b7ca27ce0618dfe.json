{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\siteComponents.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\n\nasync function getUserInformation(web3) {\n  let ad;\n  let balance = [];\n\n  if (web3.currentProvider.isQpocket) {\n    ad = web3.currentProvider.address;\n  } else {\n    ad = await web3.eth.getAccounts()[0];\n  }\n\n  for (let i = 0; i < 8; i++) {\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i]);\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        address: ad,\n        balance: balance\n      });\n    }, 1000);\n  });\n}\n\nclass PoolInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: '',\n      roi: '',\n      minStake: '',\n      poolStatus: ''\n    };\n  }\n\n  // poolAddress, poolROIAddress, index, miner, web3\n  getContractInformation(poolAddress, poolROIAddress, index) {\n    let web3 = new Web3();\n    QuarkChain.injectWeb3(web3, jrpcUrl);\n    const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n    const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\n    let minerFee;\n    let poolFee;\n    web3.qkc.getBalance(poolAddress, function (err, res) {\n      this.setState({\n        balance: Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\"\n      });\n    });\n    poolContract.minerFee.call(function (err, res) {\n      minerFee = res / 10000;\n    });\n    poolContract.poolFee.call(function (err, res) {\n      poolFee = res / 10000;\n    });\n    poolContract.minStake.call(function (err, res) {\n      this.setState({\n        minStake: Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\"\n      });\n    });\n    poolContract.isClosed.call(function (err, res) {\n      if (res == false) {\n        this.setState({\n          poolStatus: \"Open\"\n        });\n      }\n\n      if (res == true) {\n        this.setState({\n          poolStatus: \"Closed\"\n        });\n      }\n    });\n    roiContract.calculateROI(1, {}, function (err, res) {\n      let result = (res / 10 ** 16 * (1 - (minerFee + poolFee))).toFixed(3);\n      this.state.roi = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n    });\n  }\n\n  componentDidMount(props) {\n    this.getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index);\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress,\n              target: \"_blank\",\n              children: [\"Chain \", this.props.index, \" Pool\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Estimated ROI monthly/annual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.roi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total Stakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Minimum Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.minStake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pool Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.poolStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Miner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.miner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass poolUserInterface extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PoolAllocateWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      add: '',\n      withdraw: ''\n    };\n  }\n\n  componentDidMount(props) {}\n\n  sendTransaction() {\n    let rawTx = {\n      value: this.state.add * 10 ** 18,\n      to: this.props.poolAddress,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    }; //workaround mit ethers und axios notwendig\n\n    this.props.web3.qkc.sendTransaction(rawTx, function (err, transactionId) {\n      console.log(transactionId);\n    });\n  }\n\n  withdrawStake() {\n    let rawTx = {\n      value: this.state.withdraw * 10 ** 18,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    };\n  }\n\n  handleAddChange(event) {\n    this.setState({\n      add: event.target.value\n    });\n  }\n\n  handleWithdrawChange(event) {\n    this.setState({\n      withdraw: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Add Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.value,\n                onChange: e => this.handleAddChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.sendTransaction,\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.value,\n                onChange: e => this.handleWithdrawChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.withdrawStake,\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: \"Please make sure that you have a web3 wallet installed in your browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolInterface, PoolAllocateWithdraw };","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/siteComponents.js"],"names":["Web3","QuarkChain","React","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","web3","injectWeb3","getUserInformation","ad","balance","currentProvider","isQpocket","address","eth","getAccounts","i","qkc","getBalance","Promise","resolve","setTimeout","PoolInterface","Component","state","roi","minStake","poolStatus","getContractInformation","poolAddress","poolROIAddress","index","roiContract","contract","at","poolContract","minerFee","poolFee","err","res","setState","Number","toFixed","toLocaleString","call","isClosed","calculateROI","result","componentDidMount","props","console","log","render","miner","poolUserInterface","PoolAllocateWithdraw","add","withdraw","sendTransaction","rawTx","value","to","fromFullShardKey","getFullShardKeyFromQkcAddress","toFullShardKey","gas","gasPrice","transactionId","withdrawStake","handleAddChange","event","target","handleWithdrawChange","window","ethereum","e"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\n\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nasync function getUserInformation(web3) {\r\n  let ad;\r\n  let balance = [];\r\n\r\n  if(web3.currentProvider.isQpocket){\r\n    ad = web3.currentProvider.address;\r\n  } else {\r\n    ad = await web3.eth.getAccounts()[0]\r\n  }\r\n  for(let i=0; i<8; i++) {\r\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i])\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        address: ad,\r\n        balance: balance,\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nclass PoolInterface extends React.Component {\r\n  // poolAddress, poolROIAddress, index, miner, web3\r\n\r\n  getContractInformation(poolAddress, poolROIAddress, index) {\r\n    let web3 = new Web3();\r\n    QuarkChain.injectWeb3(web3, jrpcUrl)\r\n    const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n    const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n    let minerFee;\r\n    let poolFee;\r\n  \r\n    web3.qkc.getBalance(poolAddress, function(err, res) {\r\n      this.setState({balance: Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"});\r\n    });\r\n  \r\n    poolContract.minerFee.call(function(err, res){\r\n      minerFee = res/10000;\r\n    });\r\n    poolContract.poolFee.call(function(err, res){\r\n      poolFee = res/10000;\r\n    });\r\n    poolContract.minStake.call(function(err, res){\r\n      this.setState({minStake: Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"});\r\n    });\r\n  \r\n    poolContract.isClosed.call(function(err, res){\r\n        if(res == false){\r\n          this.setState({poolStatus: \"Open\"});\r\n        }\r\n        if(res == true){  \r\n          this.setState({poolStatus: \"Closed\"});\r\n        }\r\n    });\r\n  \r\n    roiContract.calculateROI(1, {}, function(err, res) {\r\n  \r\n      let result = ((res/10**16)*(1-(minerFee + poolFee))).toFixed(3);\r\n  \r\n      this.state.roi = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n    });\r\n  }\r\n\r\n  state = {\r\n    balance : '',\r\n    roi : '',\r\n    minStake : '',\r\n    poolStatus : ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    this.getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index);\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n                <th colSpan=\"2\">\r\n                  <a href={\"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress} target=\"_blank\">Chain {this.props.index} Pool</a>\r\n                </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n                <td>Estimated ROI monthly/annual</td>\r\n                <td>{this.state.roi}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Stakes</td>\r\n                <td>{this.state.balance}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Minimum Stake</td>\r\n                <td>{this.state.minStake}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Pool Status</td>\r\n                <td>{this.state.poolStatus}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Miner</td>\r\n              <td>{this.props.miner}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nclass poolUserInterface extends React.Component {\r\n  render() {\r\n    return (\r\n      <a></a>\r\n    )\r\n  }\r\n}\r\n\r\nclass PoolAllocateWithdraw extends React.Component {\r\n  //poolAddress, web3\r\n\r\n  state = {\r\n    add: '',\r\n    withdraw: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n\r\n  }\r\n\r\n  sendTransaction() {\r\n    let rawTx = {\r\n      value: this.state.add*10**18,\r\n      to: this.props.poolAddress,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n    \r\n    //workaround mit ethers und axios notwendig\r\n    this.props.web3.qkc.sendTransaction(rawTx, function(err, transactionId){\r\n      console.log(transactionId)\r\n    });\r\n  }\r\n\r\n  withdrawStake() {\r\n    let rawTx = {\r\n      value: this.state.withdraw*10**18,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n  }\r\n\r\n  handleAddChange(event) {\r\n    this.setState({add: event.target.value});\r\n  }\r\n  handleWithdrawChange(event) {\r\n    this.setState({withdraw: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    if(window.ethereum) {\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Add Stake</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.value} onChange={e => this.handleAddChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={ () => this.sendTransaction}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Withdraw</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.value} onChange={e => this.handleWithdrawChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={ () => this.withdrawStake}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <tfoot>\r\n            Please make sure that you have a web3 wallet installed in your browser\r\n          </tfoot>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport {PoolInterface, PoolAllocateWithdraw};"]},"metadata":{},"sourceType":"module"}