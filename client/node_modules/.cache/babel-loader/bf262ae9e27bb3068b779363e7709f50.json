{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\siteComponents.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\n\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let v5;\n  let v6;\n  let v7;\n  web3.qkc.getBalance(poolAddress, function (err, res) {\n    v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].minerFee.call(function (err, res) {\n    minerFee[index] = res / 10000;\n    v2 = res / 100 + \"%\";\n  });\n  poolContract[index].poolFee.call(function (err, res) {\n    poolFee[index] = res / 10000;\n    v3 = res / 100 + \"%\";\n  });\n  poolContract[index].minStake.call(function (err, res) {\n    v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].isClosed.call(function (err, res) {\n    if (res == false) {\n      v5 = \"Open\";\n    }\n\n    if (res == true) {\n      v5 = \"Closed\";\n    }\n  });\n  roiContract[index].calculateROI(1, {}, function (err, res) {\n    let result = (res / 10 ** 16 * (1 - (minerFee[0] + poolFee[0]))).toFixed(3);\n    v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n  });\n\n  if (getUserInformation.address == undefined) {\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\";\n  } else {\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {\n      from: getUserInformation.address\n    }, function (err, res) {\n      v7 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n    });\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        balance: v1,\n        minerFee: v2,\n        poolFee: v3,\n        minStake: v4,\n        status: v5,\n        roi: v6,\n        userStake: v7\n      });\n    }, 2000);\n  });\n}\n\nasync function getUserInformation(web3) {\n  let ad;\n  let balance = [];\n\n  if (web3.currentProvider.isQpocket) {\n    ad = web3.currentProvider.address;\n  } else {\n    ad = await web3.eth.getAccounts()[0];\n  }\n\n  for (let i = 0; i < 8; i++) {\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i]);\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        address: ad,\n        balance: balance\n      });\n    }, 1000);\n  });\n}\n\nclass PoolInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: '',\n      roi: '',\n      minStake: '',\n      poolStatus: ''\n    };\n  }\n\n  // poolAddress, poolROIAddress, index, miner, web3\n  getContractInformation(poolAddress, poolROIAddress, index) {\n    let web3 = new Web3();\n    QuarkChain.injectWeb3(web3, jrpcUrl);\n    const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n    const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\n    let minerFee;\n    let poolFee;\n    web3.qkc.getBalance(poolAddress, function (err, res) {\n      this.setState({\n        balance: Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\"\n      });\n    });\n    poolContract.minerFee.call(function (err, res) {\n      minerFee = res / 10000;\n    });\n    poolContract.poolFee.call(function (err, res) {\n      poolFee = res / 10000;\n    });\n    poolContract.minStake.call(function (err, res) {\n      this.setState({\n        minStake: Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\"\n      });\n    });\n    poolContract.isClosed.call(function (err, res) {\n      if (res == false) {\n        this.setState({\n          poolStatus: \"Open\"\n        });\n      }\n\n      if (res == true) {\n        this.setState({\n          poolStatus: \"Closed\"\n        });\n      }\n    });\n    roiContract.calculateROI(1, {}, function (err, res) {\n      let result = (res / 10 ** 16 * (1 - (minerFee + poolFee))).toFixed(3);\n      this.state.roi = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n    });\n  }\n\n  componentDidMount(props) {\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index).then(data => {\n      this.setState({\n        balance: data.balance,\n        roi: data.roi,\n        minStake: data.minStake,\n        poolStatus: data.status\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress,\n              target: \"_blank\",\n              children: [\"Chain \", this.props.index, \" Pool\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Estimated ROI monthly/annual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.roi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total Stakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Minimum Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.minStake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pool Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.poolStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Miner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.miner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass poolUserInterface extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PoolAllocateWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      add: '',\n      withdraw: ''\n    };\n  }\n\n  componentDidMount(props) {}\n\n  sendTransaction() {\n    let rawTx = {\n      value: this.state.add * 10 ** 18,\n      to: this.props.poolAddress,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    }; //workaround mit ethers und axios notwendig\n\n    this.props.web3.qkc.sendTransaction(rawTx, function (err, transactionId) {\n      console.log(transactionId);\n    });\n  }\n\n  withdrawStake() {\n    let rawTx = {\n      value: this.state.withdraw * 10 ** 18,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    };\n  }\n\n  handleAddChange(event) {\n    this.setState({\n      add: event.target.value\n    });\n  }\n\n  handleWithdrawChange(event) {\n    this.setState({\n      withdraw: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Add Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.value,\n                onChange: e => this.handleAddChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.sendTransaction,\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.value,\n                onChange: e => this.handleWithdrawChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.withdrawStake,\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: \"Please make sure that you have a web3 wallet installed in your browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolInterface, PoolAllocateWithdraw };","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/siteComponents.js"],"names":["Web3","QuarkChain","React","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","web3","injectWeb3","getContractInformation","poolAddress","poolROIAddress","index","roiContract","qkc","contract","at","poolContract","v1","v2","v3","v4","v5","v6","v7","getBalance","err","res","Number","toFixed","toLocaleString","minerFee","call","poolFee","minStake","isClosed","calculateROI","result","getUserInformation","address","undefined","getStakesWithRewards","from","Promise","resolve","setTimeout","balance","status","roi","userStake","ad","currentProvider","isQpocket","eth","getAccounts","i","PoolInterface","Component","state","poolStatus","setState","componentDidMount","props","then","data","console","log","render","miner","poolUserInterface","PoolAllocateWithdraw","add","withdraw","sendTransaction","rawTx","value","to","fromFullShardKey","getFullShardKeyFromQkcAddress","toFullShardKey","gas","gasPrice","transactionId","withdrawStake","handleAddChange","event","target","handleWithdrawChange","window","ethereum","e"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\n\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\r\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n\r\n  let v1;\r\n  let v2;\r\n  let v3;\r\n  let v4;\r\n  let v5;\r\n  let v6;\r\n  let v7;\r\n\r\n  web3.qkc.getBalance(poolAddress, function(err, res) {\r\n    v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].minerFee.call(function(err, res){\r\n    minerFee[index] = res/10000\r\n    v2 = res/100+\"%\";\r\n  });\r\n  poolContract[index].poolFee.call(function(err, res){\r\n    poolFee[index] = res/10000\r\n    v3 = res/100+\"%\";\r\n  });\r\n  poolContract[index].minStake.call(function(err, res){\r\n    v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].isClosed.call(function(err, res){\r\n      if(res == false){\r\n        v5 = \"Open\";\r\n      }\r\n      if(res == true){  \r\n        v5 = \"Closed\";\r\n      }\r\n  });\r\n\r\n  roiContract[index].calculateROI(1, {}, function(err, res) {\r\n\r\n    let result = ((res/10**16)*(1-(minerFee[0] + poolFee[0]))).toFixed(3)\r\n\r\n    v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n  });\r\n\r\n  if(getUserInformation.address == undefined) {\r\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\"\r\n  } else {\r\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {from: getUserInformation.address}, function(err, res) {\r\n      v7 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n    });\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        balance: v1,\r\n        minerFee: v2,\r\n        poolFee: v3,\r\n        minStake: v4,\r\n        status: v5,\r\n        roi: v6,\r\n        userStake: v7\r\n      })\r\n    }, 2000)\r\n  })\r\n}\r\n\r\nasync function getUserInformation(web3) {\r\n  let ad;\r\n  let balance = [];\r\n\r\n  if(web3.currentProvider.isQpocket){\r\n    ad = web3.currentProvider.address;\r\n  } else {\r\n    ad = await web3.eth.getAccounts()[0]\r\n  }\r\n  for(let i=0; i<8; i++) {\r\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i])\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        address: ad,\r\n        balance: balance,\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nclass PoolInterface extends React.Component {\r\n  // poolAddress, poolROIAddress, index, miner, web3\r\n\r\n  getContractInformation(poolAddress, poolROIAddress, index) {\r\n    let web3 = new Web3();\r\n    QuarkChain.injectWeb3(web3, jrpcUrl)\r\n    const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n    const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n    let minerFee;\r\n    let poolFee;\r\n  \r\n    web3.qkc.getBalance(poolAddress, function(err, res) {\r\n      this.setState({balance: Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"});\r\n    });\r\n  \r\n    poolContract.minerFee.call(function(err, res){\r\n      minerFee = res/10000;\r\n    });\r\n    poolContract.poolFee.call(function(err, res){\r\n      poolFee = res/10000;\r\n    });\r\n    poolContract.minStake.call(function(err, res){\r\n      this.setState({minStake: Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"});\r\n    });\r\n  \r\n    poolContract.isClosed.call(function(err, res){\r\n        if(res == false){\r\n          this.setState({poolStatus: \"Open\"});\r\n        }\r\n        if(res == true){  \r\n          this.setState({poolStatus: \"Closed\"});\r\n        }\r\n    });\r\n  \r\n    roiContract.calculateROI(1, {}, function(err, res) {\r\n  \r\n      let result = ((res/10**16)*(1-(minerFee + poolFee))).toFixed(3);\r\n  \r\n      this.state.roi = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n    });\r\n  }\r\n\r\n  state = {\r\n    balance : '',\r\n    roi : '',\r\n    minStake : '',\r\n    poolStatus : ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index).then(data => {\r\n      this.setState({balance: data.balance, roi: data.roi, minStake: data.minStake, poolStatus: data.status});\r\n    });\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n                <th colSpan=\"2\">\r\n                  <a href={\"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress} target=\"_blank\">Chain {this.props.index} Pool</a>\r\n                </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n                <td>Estimated ROI monthly/annual</td>\r\n                <td>{this.state.roi}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Stakes</td>\r\n                <td>{this.state.balance}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Minimum Stake</td>\r\n                <td>{this.state.minStake}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Pool Status</td>\r\n                <td>{this.state.poolStatus}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Miner</td>\r\n              <td>{this.props.miner}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nclass poolUserInterface extends React.Component {\r\n  render() {\r\n    return (\r\n      <a></a>\r\n    )\r\n  }\r\n}\r\n\r\nclass PoolAllocateWithdraw extends React.Component {\r\n  //poolAddress, web3\r\n\r\n  state = {\r\n    add: '',\r\n    withdraw: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n\r\n  }\r\n\r\n  sendTransaction() {\r\n    let rawTx = {\r\n      value: this.state.add*10**18,\r\n      to: this.props.poolAddress,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n    \r\n    //workaround mit ethers und axios notwendig\r\n    this.props.web3.qkc.sendTransaction(rawTx, function(err, transactionId){\r\n      console.log(transactionId)\r\n    });\r\n  }\r\n\r\n  withdrawStake() {\r\n    let rawTx = {\r\n      value: this.state.withdraw*10**18,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n  }\r\n\r\n  handleAddChange(event) {\r\n    this.setState({add: event.target.value});\r\n  }\r\n  handleWithdrawChange(event) {\r\n    this.setState({withdraw: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    if(window.ethereum) {\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Add Stake</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.value} onChange={e => this.handleAddChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={ () => this.sendTransaction}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Withdraw</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.value} onChange={e => this.handleWithdrawChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={ () => this.withdrawStake}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <tfoot>\r\n            Please make sure that you have a web3 wallet installed in your browser\r\n          </tfoot>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport {PoolInterface, PoolAllocateWithdraw};"]},"metadata":{},"sourceType":"module"}