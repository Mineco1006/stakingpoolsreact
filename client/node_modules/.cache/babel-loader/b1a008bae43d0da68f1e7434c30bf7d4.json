{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\stakingpoolsreact\\\\client\\\\src\\\\components\\\\userInterface.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react';\nimport axios from 'axios';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config.js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PoolUserInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAddress: '',\n      stake: ''\n    };\n  }\n\n  getUserStake() {\n    const poolContract = this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress);\n    let stake;\n    poolContract.getStakesWithRewards(this.state.userAddress, {\n      from: this.state.userAddress\n    }, function (err, res) {\n      stake = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n      this.setState({\n        stake: stake\n      });\n    }.bind(this));\n  }\n\n  componentDidMount(props) {\n    if (window.web3) {\n      this.props.web3.eth.getAccounts().then(function (accounts) {\n        this.setState({\n          userAddress: accounts[0]\n        });\n        this.getUserStake();\n      }.bind(this));\n    }\n  }\n\n  render() {\n    if (window.web3) {\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rowcolour1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Your Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: this.state.userAddress + standardShardKeys[this.props.index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rowcolour2\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Your Chain \", this.props.index, \" Pool Stake\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: this.state.stake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"rowcolour1\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: \"Please enable your web3 wallet to check your stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nclass PoolAllocateAndWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      add: '',\n      withdraw: '',\n      userAddress: '',\n      poolContract: '',\n      userBalance: ''\n    };\n  }\n\n  componentDidMount(props) {\n    if (window.web3) {\n      this.props.web3.eth.getAccounts().then(function (accounts) {\n        this.setState({\n          userAddress: accounts[0]\n        });\n        this.props.web3.qkc.getBalance(this.state.userAddress + standardShardKeys[this.props.index], function (err, res) {\n          const result = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n          this.setState({\n            userBalance: result\n          });\n        }.bind(this));\n      }.bind(this));\n      this.setState({\n        poolContract: this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress)\n      });\n    }\n  }\n\n  addStakeTx() {\n    //called when \"Add Stake\" button is clicked\n    const txParams = {\n      gasPrice: 2e9,\n      gas: 350000,\n      to: QuarkChain.getEthAddressFromQkcAddress(this.props.poolAddress),\n      value: this.state.add * 1e18,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      networkId: 1\n    };\n    this.props.web3.qkc.sendTransaction(txParams, function (err, res) {\n      if (res != \"0x000000000000000000000000000000000000000000000000000000000000000000000000\" && res != undefined && res != null) {\n        toast.success(({\n          closeToast\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Your \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://mainnet.quarkchain.io/tx/${res}`,\n            target: \"_blank\",\n            children: \"transaction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 53\n          }, this), \" was sent successfully\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 43\n        }, this));\n      } else {\n        toast.warn(\"Seems that your transaction has been declined\");\n      }\n    });\n  }\n\n  withdrawStake() {\n    //called when \"Withdraw\" button is clicked\n    const txParams = {\n      gasPrice: 2e9,\n      gas: 350000,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      networkId: 1\n    };\n    console.log(txParams);\n    console.log(this.state.poolContract);\n    const value = this.state.withdraw * 1e18;\n    console.log(value);\n    this.state.poolContract.withdrawStakes(value, txParams, function (err, res) {\n      if (res != \"0x000000000000000000000000000000000000000000000000000000000000000000000000\" && res != undefined && res != null) {\n        toast.success(({\n          closeToast\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Your \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://mainnet.quarkchain.io/tx/${res}`,\n            target: \"_blank\",\n            children: \"withdrawal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 55\n          }, this), \" was sent successfully\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 45\n        }, this));\n      } else {\n        console.log(err);\n        console.log(res);\n        toast.warn(\"Seems that your transaction has been declined\");\n      }\n    });\n  }\n\n  handleAddChange(event) {\n    this.setState({\n      add: event.target.value\n    });\n  }\n\n  handleWithdrawChange(event) {\n    this.setState({\n      withdraw: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rowcolour1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Your Chain \", this.props.index, \" Balance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: this.state.userBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rowcolour2\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inp\",\n              type: \"number\",\n              min: \"0\",\n              placeholder: \"e.g. 50000\",\n              value: this.state.add,\n              onChange: e => this.handleAddChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"but\",\n              onClick: this.addStakeTx.bind(this),\n              children: \"Deposit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"rowcolour1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Withdraw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"inp\",\n              type: \"number\",\n              min: \"0\",\n              placeholder: \"e.g. 50000\",\n              value: this.state.withdraw,\n              onChange: e => this.handleWithdrawChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"but\",\n              onClick: this.withdrawStake.bind(this),\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: \"Please make sure that you have a web3 wallet installed in your browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolUserInterface, PoolAllocateAndWithdraw };","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/stakingpoolsreact/client/src/components/userInterface.js"],"names":["Web3","QuarkChain","React","axios","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","ToastContainer","toast","PoolUserInterface","Component","state","userAddress","stake","getUserStake","poolContract","props","web3","qkc","contract","at","poolAddress","getStakesWithRewards","from","err","res","Number","toFixed","toLocaleString","setState","bind","componentDidMount","window","eth","getAccounts","then","accounts","render","index","PoolAllocateAndWithdraw","add","withdraw","userBalance","getBalance","result","addStakeTx","txParams","gasPrice","gas","to","getEthAddressFromQkcAddress","value","fromFullShardKey","getFullShardKeyFromQkcAddress","toFullShardKey","networkId","sendTransaction","undefined","success","closeToast","warn","withdrawStake","console","log","withdrawStakes","handleAddChange","event","target","handleWithdrawChange","ethereum","e"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,EAAsBC,eAAtB,EAAuCC,sBAAvC,EAA+DC,mBAA/D,EAAoFC,YAApF,EAAkGC,OAAlG,EAA2GC,iBAA3G,QAAmI,aAAnI;AACA,SAAQC,cAAR,EAAwBC,KAAxB,QAAoC,gBAApC;;;AAEA,MAAMC,iBAAN,SAAgCX,KAAK,CAACY,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAG5CC,KAH4C,GAGtC;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAHsC;AAAA;;AAQ5CC,EAAAA,YAAY,GAAG;AACb,UAAMC,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,QAApB,CAA6BnB,YAA7B,EAA2CoB,EAA3C,CAA8C,KAAKJ,KAAL,CAAWK,WAAzD,CAArB;AACA,QAAIR,KAAJ;AAEAE,IAAAA,YAAY,CAACO,oBAAb,CAAkC,KAAKX,KAAL,CAAWC,WAA7C,EAA0D;AAACW,MAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC;AAAlB,KAA1D,EAA0F,UAASY,GAAT,EAAcC,GAAd,EAAkB;AAC1GZ,MAAAA,KAAK,GAAGa,MAAM,CAAC,CAACD,GAAG,GAAC,MAAI,EAAT,EAAaE,OAAb,CAAqB,CAArB,CAAD,CAAN,CAAgCC,cAAhC,KAAmD,MAA3D;AACA,WAAKC,QAAL,CAAc;AAAChB,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KAHyF,CAGxFiB,IAHwF,CAGnF,IAHmF,CAA1F;AAID;;AAEDC,EAAAA,iBAAiB,CAACf,KAAD,EAAQ;AACvB,QAAGgB,MAAM,CAACf,IAAV,EAAgB;AACd,WAAKD,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoBC,WAApB,GAAkCC,IAAlC,CAAuC,UAASC,QAAT,EAAmB;AAC1D,aAAKP,QAAL,CAAc;AAACjB,UAAAA,WAAW,EAAEwB,QAAQ,CAAC,CAAD;AAAtB,SAAd;AACA,aAAKtB,YAAL;AACD,OAHwC,CAGvCgB,IAHuC,CAGlC,IAHkC,CAAvC;AAMD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAGL,MAAM,CAACf,IAAV,EAAe;AACb,0BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,sBACG,KAAKN,KAAL,CAAWC,WAAX,GAAyBN,iBAAiB,CAAC,KAAKU,KAAL,CAAWsB,KAAZ;AAD7C;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAA,sCACc,KAAKtB,KAAL,CAAWsB,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,sBACG,KAAK3B,KAAL,CAAWE;AADd;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAqBD,KAtBD,MAsBK;AACH,0BACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,+BACE;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ;AAOD;AAEF;;AA9D2C;;AAmE9C,MAAM0B,uBAAN,SAAsCzC,KAAK,CAACY,SAA5C,CAAsD;AAAA;AAAA;AAAA,SAGpDC,KAHoD,GAG5C;AACN6B,MAAAA,GAAG,EAAE,EADC;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGN7B,MAAAA,WAAW,EAAE,EAHP;AAING,MAAAA,YAAY,EAAE,EAJR;AAKN2B,MAAAA,WAAW,EAAE;AALP,KAH4C;AAAA;;AAWpDX,EAAAA,iBAAiB,CAACf,KAAD,EAAQ;AACvB,QAAGgB,MAAM,CAACf,IAAV,EAAgB;AACd,WAAKD,KAAL,CAAWC,IAAX,CAAgBgB,GAAhB,CAAoBC,WAApB,GAAkCC,IAAlC,CAAuC,UAASC,QAAT,EAAmB;AAC1D,aAAKP,QAAL,CAAc;AAACjB,UAAAA,WAAW,EAAEwB,QAAQ,CAAC,CAAD;AAAtB,SAAd;AACA,aAAKpB,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoByB,UAApB,CAA+B,KAAKhC,KAAL,CAAWC,WAAX,GAAyBN,iBAAiB,CAAC,KAAKU,KAAL,CAAWsB,KAAZ,CAAzE,EAA6F,UAASd,GAAT,EAAcC,GAAd,EAAkB;AAC7G,gBAAMmB,MAAM,GAAGlB,MAAM,CAAC,CAACD,GAAG,GAAC,MAAI,EAAT,EAAaE,OAAb,CAAqB,CAArB,CAAD,CAAN,CAAgCC,cAAhC,KAAmD,MAAlE;AACA,eAAKC,QAAL,CAAc;AAACa,YAAAA,WAAW,EAAEE;AAAd,WAAd;AACD,SAH4F,CAG3Fd,IAH2F,CAGtF,IAHsF,CAA7F;AAID,OANwC,CAMvCA,IANuC,CAMlC,IANkC,CAAvC;AAOF,WAAKD,QAAL,CAAc;AAACd,QAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,QAApB,CAA6BnB,YAA7B,EAA2CoB,EAA3C,CAA8C,KAAKJ,KAAL,CAAWK,WAAzD;AAAf,OAAd;AACC;AACF;;AAEDwB,EAAAA,UAAU,GAAG;AAAE;AAEb,UAAMC,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAE,GADK;AAEfC,MAAAA,GAAG,EAAE,MAFU;AAGfC,MAAAA,EAAE,EAAEpD,UAAU,CAACqD,2BAAX,CAAuC,KAAKlC,KAAL,CAAWK,WAAlD,CAHW;AAIf8B,MAAAA,KAAK,EAAE,KAAKxC,KAAL,CAAW6B,GAAX,GAAe,IAJP;AAKfY,MAAAA,gBAAgB,EAAEvD,UAAU,CAACwD,6BAAX,CAAyC,KAAKrC,KAAL,CAAWK,WAApD,CALH;AAMfiC,MAAAA,cAAc,EAAEzD,UAAU,CAACwD,6BAAX,CAAyC,KAAKrC,KAAL,CAAWK,WAApD,CAND;AAOfkC,MAAAA,SAAS,EAAE;AAPI,KAAjB;AASF,SAAKvC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBsC,eAApB,CAAoCV,QAApC,EAA8C,UAAStB,GAAT,EAAaC,GAAb,EAAkB;AAC9D,UAAGA,GAAG,IAAI,4EAAP,IAAuFA,GAAG,IAAIgC,SAA9F,IAA2GhC,GAAG,IAAI,IAArH,EAA2H;AACzHjB,QAAAA,KAAK,CAACkD,OAAN,CAAc,CAAC;AAAEC,UAAAA;AAAF,SAAD,kBAAoB;AAAA,2CAAU;AAAG,YAAA,IAAI,EAAG,oCAAmClC,GAAI,EAAjD;AAAoD,YAAA,MAAM,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlC;AACD,OAFD,MAEO;AACLjB,QAAAA,KAAK,CAACoD,IAAN,CAAW,+CAAX;AACD;AACA,KANH;AAQC;;AAIDC,EAAAA,aAAa,GAAG;AAAE;AAEhB,UAAMf,QAAQ,GAAG;AACfC,MAAAA,QAAQ,EAAE,GADK;AAEfC,MAAAA,GAAG,EAAE,MAFU;AAGfI,MAAAA,gBAAgB,EAAEvD,UAAU,CAACwD,6BAAX,CAAyC,KAAKrC,KAAL,CAAWK,WAApD,CAHH;AAIfiC,MAAAA,cAAc,EAAEzD,UAAU,CAACwD,6BAAX,CAAyC,KAAKrC,KAAL,CAAWK,WAApD,CAJD;AAKfkC,MAAAA,SAAS,EAAE;AALI,KAAjB;AAQAO,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpD,KAAL,CAAWI,YAAvB;AAEA,UAAMoC,KAAK,GAAG,KAAKxC,KAAL,CAAW8B,QAAX,GAAoB,IAAlC;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,SAAKxC,KAAL,CAAWI,YAAX,CAAwBiD,cAAxB,CAAuCb,KAAvC,EAA8CL,QAA9C,EAAwD,UAAStB,GAAT,EAAcC,GAAd,EAAmB;AACzE,UAAGA,GAAG,IAAI,4EAAP,IAAuFA,GAAG,IAAIgC,SAA9F,IAA2GhC,GAAG,IAAI,IAArH,EAA2H;AACzHjB,QAAAA,KAAK,CAACkD,OAAN,CAAc,CAAC;AAAEC,UAAAA;AAAF,SAAD,kBAAoB;AAAA,2CAAU;AAAG,YAAA,IAAI,EAAG,oCAAmClC,GAAI,EAAjD;AAAoD,YAAA,MAAM,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlC;AACD,OAFD,MAEO;AACLqC,QAAAA,OAAO,CAACC,GAAR,CAAYvC,GAAZ;AACAsC,QAAAA,OAAO,CAACC,GAAR,CAAYtC,GAAZ;AACAjB,QAAAA,KAAK,CAACoD,IAAN,CAAW,+CAAX;AACD;AACF,KARD;AASD;;AAEDK,EAAAA,eAAe,CAACC,KAAD,EAAQ;AACrB,SAAKrC,QAAL,CAAc;AAACW,MAAAA,GAAG,EAAE0B,KAAK,CAACC,MAAN,CAAahB;AAAnB,KAAd;AACD;;AACDiB,EAAAA,oBAAoB,CAACF,KAAD,EAAQ;AAC1B,SAAKrC,QAAL,CAAc;AAACY,MAAAA,QAAQ,EAAEyB,KAAK,CAACC,MAAN,CAAahB;AAAxB,KAAd;AACD;;AAEDd,EAAAA,MAAM,GAAG;AACP,QAAGL,MAAM,CAACqC,QAAV,EAAoB;AAClB,0BACE;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAA,sCAAgB,KAAKrD,KAAL,CAAWsB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,sBAAiB,KAAK3B,KAAL,CAAW+B;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCACE;AAAO,cAAA,SAAS,EAAC,KAAjB;AAAuB,cAAA,IAAI,EAAC,QAA5B;AAAqC,cAAA,GAAG,EAAC,GAAzC;AAA6C,cAAA,WAAW,EAAC,YAAzD;AAAsE,cAAA,KAAK,EAAE,KAAK/B,KAAL,CAAW6B,GAAxF;AAA6F,cAAA,QAAQ,EAAE8B,CAAC,IAAI,KAAKL,eAAL,CAAqBK,CAArB;AAA5G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,OAAO,EAAE,KAAKzB,UAAL,CAAgBf,IAAhB,CAAqB,IAArB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAcI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCACE;AAAO,cAAA,SAAS,EAAC,KAAjB;AAAuB,cAAA,IAAI,EAAC,QAA5B;AAAqC,cAAA,GAAG,EAAC,GAAzC;AAA6C,cAAA,WAAW,EAAC,YAAzD;AAAsE,cAAA,KAAK,EAAE,KAAKnB,KAAL,CAAW8B,QAAxF;AAAkG,cAAA,QAAQ,EAAE6B,CAAC,IAAI,KAAKF,oBAAL,CAA0BE,CAA1B;AAAjH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,OAAO,EAAE,KAAKT,aAAL,CAAmB/B,IAAnB,CAAwB,IAAxB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA0BD,KA3BD,MA2BO;AACL,0BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF;;AAvHmD;;AA0HxD,SAAQrB,iBAAR,EAA2B8B,uBAA3B","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\nclass PoolUserInterface extends React.Component {\r\n    //poolAddress, web3, index\r\n  \r\n    state={\r\n      userAddress: '',\r\n      stake: ''\r\n    }\r\n  \r\n    getUserStake() {\r\n      const poolContract = this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress);\r\n      let stake\r\n    \r\n      poolContract.getStakesWithRewards(this.state.userAddress, {from: this.state.userAddress}, function(err, res){\r\n        stake = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n        this.setState({stake: stake})\r\n      }.bind(this));\r\n    }\r\n  \r\n    componentDidMount(props) {\r\n      if(window.web3) {\r\n        this.props.web3.eth.getAccounts().then(function(accounts) {\r\n        this.setState({userAddress: accounts[0]})\r\n        this.getUserStake()\r\n      }.bind(this))\r\n  \r\n      \r\n      }\r\n    }\r\n  \r\n    render() {\r\n      if(window.web3){\r\n        return (\r\n          <tbody>\r\n            <tr className=\"rowcolour1\">\r\n              <td>\r\n                Your Address\r\n              </td>\r\n              <td colSpan=\"2\">\r\n                {this.state.userAddress + standardShardKeys[this.props.index]}\r\n              </td>\r\n            </tr>\r\n            <tr className=\"rowcolour2\">\r\n              <td>\r\n                Your Chain {this.props.index} Pool Stake\r\n              </td>\r\n              <td colSpan=\"2\">\r\n                {this.state.stake}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          \r\n      )\r\n      }else{\r\n        return (\r\n            <tr className=\"rowcolour1\">\r\n              <td colSpan=\"2\">\r\n                Please enable your web3 wallet to check your stake\r\n              </td>\r\n            </tr>\r\n        )\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n  class PoolAllocateAndWithdraw extends React.Component {\r\n    //poolAddress, web3, index\r\n  \r\n    state = {\r\n      add: '',\r\n      withdraw: '',\r\n      userAddress: '',\r\n      poolContract: '',\r\n      userBalance: ''\r\n    }\r\n  \r\n    componentDidMount(props) {\r\n      if(window.web3) {\r\n        this.props.web3.eth.getAccounts().then(function(accounts) {\r\n        this.setState({userAddress: accounts[0]});\r\n        this.props.web3.qkc.getBalance(this.state.userAddress + standardShardKeys[this.props.index], function(err, res){\r\n          const result = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n          this.setState({userBalance: result})\r\n        }.bind(this));\r\n      }.bind(this));\r\n      this.setState({poolContract: this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress)})\r\n      }\r\n    }\r\n  \r\n    addStakeTx() { //called when \"Add Stake\" button is clicked\r\n  \r\n      const txParams = {\r\n        gasPrice: 2e9,\r\n        gas: 350000,\r\n        to: QuarkChain.getEthAddressFromQkcAddress(this.props.poolAddress),\r\n        value: this.state.add*1e18,\r\n        fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n        toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n        networkId: 1\r\n    }\r\n    this.props.web3.qkc.sendTransaction(txParams, function(err,res) {\r\n      if(res != \"0x000000000000000000000000000000000000000000000000000000000000000000000000\" && res != undefined && res != null) {\r\n        toast.success(({ closeToast }) => <div>Your <a href={`https://mainnet.quarkchain.io/tx/${res}`} target=\"_blank\">transaction</a> was sent successfully</div>) \r\n      } else {\r\n        toast.warn(\"Seems that your transaction has been declined\")\r\n      }\r\n      });\r\n         \r\n    }\r\n  \r\n  \r\n  \r\n    withdrawStake() { //called when \"Withdraw\" button is clicked\r\n  \r\n      const txParams = {\r\n        gasPrice: 2e9,\r\n        gas: 350000,\r\n        fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n        toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n        networkId: 1\r\n      }\r\n\r\n      console.log(txParams)\r\n\r\n      console.log(this.state.poolContract)\r\n\r\n      const value = this.state.withdraw*1e18\r\n      console.log(value)\r\n      \r\n      this.state.poolContract.withdrawStakes(value, txParams, function(err, res) {\r\n        if(res != \"0x000000000000000000000000000000000000000000000000000000000000000000000000\" && res != undefined && res != null) {\r\n          toast.success(({ closeToast }) => <div>Your <a href={`https://mainnet.quarkchain.io/tx/${res}`} target=\"_blank\">withdrawal</a> was sent successfully</div>) \r\n        } else {\r\n          console.log(err)\r\n          console.log(res)\r\n          toast.warn(\"Seems that your transaction has been declined\")\r\n        }\r\n      });\r\n    }\r\n  \r\n    handleAddChange(event) {\r\n      this.setState({add: event.target.value});\r\n    }\r\n    handleWithdrawChange(event) {\r\n      this.setState({withdraw: event.target.value});\r\n    }\r\n    \r\n    render() {\r\n      if(window.ethereum) {\r\n        return (\r\n          <tbody>\r\n              <tr className=\"rowcolour1\">\r\n                <td>Your Chain {this.props.index} Balance</td>\r\n                <td colSpan=\"2\">{this.state.userBalance}</td>\r\n              </tr>\r\n              <tr className=\"rowcolour2\">\r\n                <td>Deposit</td>\r\n                <td>\r\n                  <input className=\"inp\" type=\"number\" min=\"0\" placeholder=\"e.g. 50000\" value={this.state.add} onChange={e => this.handleAddChange(e)} />\r\n                </td>\r\n                <td>\r\n                  <button className=\"but\" onClick={this.addStakeTx.bind(this)}>Deposit</button>\r\n                </td>\r\n              </tr>\r\n              <tr className=\"rowcolour1\">\r\n                <td>Withdraw</td>\r\n                <td>\r\n                  <input className=\"inp\" type=\"number\" min=\"0\" placeholder=\"e.g. 50000\" value={this.state.withdraw} onChange={e => this.handleWithdrawChange(e)} />\r\n                </td>\r\n                <td>\r\n                  <button className=\"but\" onClick={this.withdrawStake.bind(this)}>Withdraw</button>\r\n                </td>\r\n              </tr>\r\n          </tbody>\r\n        )\r\n      } else {\r\n        return (\r\n          <table>\r\n            <tfoot>\r\n              Please make sure that you have a web3 wallet installed in your browser\r\n            </tfoot>\r\n          </table>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\nexport {PoolUserInterface, PoolAllocateAndWithdraw};"]},"metadata":{},"sourceType":"module"}