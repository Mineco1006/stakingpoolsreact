{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Web3 from'web3';import axios from'axios';axios.defaults.xsrfCookieName=\"csrftoken\";axios.defaults.xsrfHeaderName=\"X-CSRFToken\";function generateTx(_x,_x2,_x3){return _generateTx.apply(this,arguments);}function _generateTx(){_generateTx=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(to,data,value){var from,transactionCountResp,fromFullShardKey,toRecipient,toFullShardKey,rawTx,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:from=_args.length>3&&_args[3]!==undefined?_args[3]:null;if(from===null){from=this.address;}_context.next=4;return axios.post(\"/getTransactionCount\",{address:from});case 4:transactionCountResp=_context.sent;fromFullShardKey=\"0x\"+from.slice(-8);if(to!==\"\"){toRecipient=to.slice(0,42);toFullShardKey=\"0x\"+to.slice(42);}else{toRecipient=\"\";toFullShardKey=fromFullShardKey;}rawTx={nonce:transactionCountResp.data.transactionCount,from:from.slice(0,42),to:toRecipient,gasPrice:\"0x\"+2 .toString(16),gas:\"0x\"+350000 .toString(16),value:\"0x\"+value.toString(16),data:data,fromFullShardKey:fromFullShardKey,toFullShardKey:toFullShardKey,networkId:\"0x\".concat(1 .toString(16)),gasTokenId:\"0x\".concat(this.gasTokenId.toString(16)),transferTokenId:\"0x\".concat(this.transferTokenId.toString(16))};case 8:case\"end\":return _context.stop();}}},_callee,this);}));return _generateTx.apply(this,arguments);}function signAndSendTx(_x4){return _signAndSendTx.apply(this,arguments);}function _signAndSendTx(){_signAndSendTx=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rawTx){var txId,success;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:txId='';_context2.prev=1;_context2.next=4;return this.qPocketSignAndSendTx(rawTx);case 4:txId=_context2.sent;_context2.next=11;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](1);console.log(\"error 404\");return _context2.abrupt(\"return\");case 11:txId=txId;success=!!txId&&!txId.startsWith('0x000000000000000000000000000000000000000');if(success){//const url = (<a href=\"/tx/${txId}\">${txId}</a>);\nconsole.log(\"Successfully sent transaction \".concat(txId,\".\"));}else{console.log(\"Sending transaction failed\",7000);}case 14:case\"end\":return _context2.stop();}}},_callee2,this,[[1,7]]);}));return _signAndSendTx.apply(this,arguments);}function metaMaskSignTyped(tx,web3,from){console.log(\"Awaiting MetaMask signature confirmation...\");return new Promise(function(resolve,reject){var params=[getTypedTx(tx),from];var method='eth_signTypedData';web3.currentProvider.sendAsync({method:method,params:params,from:from},function(err,result){if(result.error!==undefined){console.log(\"It looks you declined the transaction in MetaMask\");console.log(result.error);}resolve(result.result);});}.bind(this));}function sendRawTx(_x5){return _sendRawTx.apply(this,arguments);}function _sendRawTx(){_sendRawTx=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rawTx){var txResp;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:try{axios.post(\"https://devnet.quarkchain.io/sendRawTx\",{rawTx:rawTx}).then(function(data){console.log(data);});}catch(error){console.log(\"Sending transaction failed\");}case 1:case\"end\":return _context3.stop();}}},_callee3);}));return _sendRawTx.apply(this,arguments);}function getDeviceType(){var ua=navigator.userAgent,isWindowsPhone=/(?:Windows Phone)/.test(ua),isSymbian=/(?:SymbianOS)/.test(ua)||isWindowsPhone,isAndroid=/(?:Android)/.test(ua),isFireFox=/(?:Firefox)/.test(ua),isChrome=/(?:Chrome|CriOS)/.test(ua),isTablet=/(?:iPad|PlayBook)/.test(ua)||isAndroid&&!/(?:Mobile)/.test(ua)||isFireFox&&/(?:Tablet)/.test(ua),isPhone=/(?:iPhone)/.test(ua)&&!isTablet,isPc=!isPhone&&!isAndroid&&!isSymbian;return{isPhone:isPhone,isPc:isPc};}function getTypedTx(tx){var msgParams=[{type:'uint256',name:'nonce',value:\"0x\".concat(tx.nonce.toString(16))},{type:'uint256',name:'gasPrice',value:\"0x\".concat(tx.gasPrice.toString(16))},{type:'uint256',name:'gasLimit',value:\"0x\".concat(tx.gasLimit.toString(16))},{type:'uint160',name:'to',value:\"\".concat(tx.to)},{type:'uint256',name:'value',value:\"0x\".concat(tx.value.toString(16))},{type:'bytes',name:'data',value:\"0x\".concat(tx.data.toString(16))},{type:'uint256',name:'networkId',value:'0x1'},{type:'uint32',name:'fromFullShardKey',value:\"\".concat(tx.fromFullShardKey)},{type:'uint32',name:'toFullShardKey',value:\"\".concat(tx.toFullShardKey)},{type:'uint64',name:'gasTokenId',value:'0x8bb0'},{\"type\":'uint64',\"name\":'transferTokenId',\"value\":'0x8bb0'},{\"type\":'string',\"name\":'qkcDomain',\"value\":'bottom-quark'}];console.log(msgParams);return msgParams;}export{metaMaskSignTyped,getTypedTx,getDeviceType,sendRawTx};","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/functionCol/lib.js"],"names":["Web3","axios","defaults","xsrfCookieName","xsrfHeaderName","generateTx","to","data","value","from","address","post","transactionCountResp","fromFullShardKey","slice","toRecipient","toFullShardKey","rawTx","nonce","transactionCount","gasPrice","toString","gas","networkId","gasTokenId","transferTokenId","signAndSendTx","txId","qPocketSignAndSendTx","console","log","success","startsWith","metaMaskSignTyped","tx","web3","Promise","resolve","reject","params","getTypedTx","method","currentProvider","sendAsync","err","result","error","undefined","bind","sendRawTx","then","getDeviceType","ua","navigator","userAgent","isWindowsPhone","test","isSymbian","isAndroid","isFireFox","isChrome","isTablet","isPhone","isPc","msgParams","type","name","gasLimit"],"mappings":"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","sourcesContent":["import Web3 from 'web3'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\r\n\r\nasync function generateTx(to, data, value, from = null) {\r\n    if (from === null) {\r\n      from = this.address;\r\n    }\r\n    const transactionCountResp = await axios.post(\r\n      \"/getTransactionCount\",\r\n      { address: from },\r\n    );\r\n    const fromFullShardKey = \"0x\" + from.slice(-8);\r\n    let toRecipient;\r\n    let toFullShardKey;\r\n    if (to !== \"\") {\r\n      toRecipient = to.slice(0, 42);\r\n      toFullShardKey = \"0x\" + to.slice(42);\r\n    } else {\r\n      toRecipient = \"\";\r\n      toFullShardKey = fromFullShardKey;\r\n    }\r\n    const rawTx = {\r\n      nonce: transactionCountResp.data.transactionCount,\r\n      from: from.slice(0, 42),\r\n      to: toRecipient,\r\n      gasPrice: \"0x\" + (2).toString(16),\r\n      gas: \"0x\" + (350000).toString(16),\r\n      value: \"0x\" + value.toString(16),\r\n      data,\r\n      fromFullShardKey,\r\n      toFullShardKey,\r\n      networkId: `0x${(1).toString(16)}`,\r\n      gasTokenId: `0x${this.gasTokenId.toString(16)}`,\r\n      transferTokenId: `0x${this.transferTokenId.toString(16)}`,\r\n    }\r\n\r\n}\r\n\r\nasync function signAndSendTx(rawTx){\r\n    let txId = '';\r\n    try {\r\n        txId = await this.qPocketSignAndSendTx(rawTx);\r\n    } catch (error) {\r\n        console.log(\"error 404\")\r\n        return;\r\n    }\r\n\r\n    txId = txId;\r\n\r\n    const success = !!txId && !txId.startsWith('0x000000000000000000000000000000000000000');\r\n    if (success) {\r\n        //const url = (<a href=\"/tx/${txId}\">${txId}</a>);\r\n        console.log(`Successfully sent transaction ${txId}.`);\r\n        \r\n    } else {\r\n        console.log(\"Sending transaction failed\", 7000);\r\n    }\r\n}\r\n\r\nfunction metaMaskSignTyped(tx, web3, from) {\r\n    console.log(\"Awaiting MetaMask signature confirmation...\");\r\n    return new Promise(function(resolve,reject) {\r\n        var params = [getTypedTx(tx), from];\r\n        var method = 'eth_signTypedData';\r\n\r\n        web3.currentProvider.sendAsync({\r\n          method,\r\n          params,\r\n          from,\r\n        }, function (err, result) {\r\n          if(result.error !== undefined) {\r\n            console.log(\"It looks you declined the transaction in MetaMask\");\r\n            console.log(result.error);\r\n          }\r\n          resolve(result.result)\r\n        })\r\n    }.bind(this));\r\n  }\r\n\r\nasync function sendRawTx(rawTx) {\r\n  let txResp\r\n  try {\r\n    axios.post(\"https://devnet.quarkchain.io/sendRawTx\", {rawTx: rawTx}).then(function(data) {\r\n      console.log(data)\r\n    })\r\n  } catch(error) {\r\n    console.log(\"Sending transaction failed\")\r\n  }\r\n}\r\n\r\nfunction getDeviceType() {\r\n  var ua = navigator.userAgent,\r\n          isWindowsPhone = /(?:Windows Phone)/.test(ua),\r\n          isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone,\r\n          isAndroid = /(?:Android)/.test(ua),\r\n          isFireFox = /(?:Firefox)/.test(ua),\r\n          isChrome = /(?:Chrome|CriOS)/.test(ua),\r\n          isTablet = /(?:iPad|PlayBook)/.test(ua) || (isAndroid && !/(?:Mobile)/.test(ua)) || (isFireFox && /(?:Tablet)/.test(ua)),\r\n          isPhone = /(?:iPhone)/.test(ua) && !isTablet,\r\n          isPc = !isPhone && !isAndroid && !isSymbian;\r\n  return {\r\n    isPhone,\r\n    isPc\r\n  }\r\n}\r\n\r\nfunction getTypedTx(tx) {\r\n\r\n  let msgParams = [\r\n    {\r\n      type: 'uint256',\r\n      name: 'nonce',\r\n      value: `0x${tx.nonce.toString(16)}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'gasPrice',\r\n      value: `0x${tx.gasPrice.toString(16)}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'gasLimit',\r\n      value: `0x${tx.gasLimit.toString(16)}`\r\n    },\r\n    {\r\n      type: 'uint160',\r\n      name: 'to',\r\n      value: `${tx.to}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'value',\r\n      value: `0x${tx.value.toString(16)}`\r\n    },\r\n    {\r\n      type: 'bytes',\r\n      name: 'data',\r\n      value: `0x${tx.data.toString(16)}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'networkId',\r\n      value: '0x1'\r\n    },\r\n    {\r\n      type: 'uint32',\r\n      name: 'fromFullShardKey',\r\n      value: `${tx.fromFullShardKey}`\r\n    },\r\n    {\r\n      type: 'uint32',\r\n      name: 'toFullShardKey',\r\n      value: `${tx.toFullShardKey}`\r\n    },\r\n    {\r\n      type: 'uint64',\r\n      name: 'gasTokenId',\r\n      value: '0x8bb0'\r\n    },\r\n    {\r\n      \"type\": 'uint64',\r\n      \"name\": 'transferTokenId',\r\n      \"value\": '0x8bb0'\r\n    },\r\n    {\r\n      \"type\": 'string',\r\n      \"name\": 'qkcDomain',\r\n      \"value\": 'bottom-quark'\r\n    }\r\n  ];\r\n  console.log(msgParams)\r\n  return msgParams;\r\n}\r\n\r\nexport {metaMaskSignTyped, getTypedTx, getDeviceType, sendRawTx};"]},"metadata":{},"sourceType":"module"}