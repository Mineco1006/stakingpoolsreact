{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\siteComponents.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react'; //import {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ABIinterface = [{\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_minStake\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"adjustMinStake\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"amount\",\n    \"type\": \"uint16\"\n  }],\n  \"name\": \"adjustMinerFee\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"amount\",\n    \"type\": \"uint16\"\n  }],\n  \"name\": \"adjustPoolFee\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address payable\",\n    \"name\": \"_miner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"changeMiner\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"status\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"changePoolStatus\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"flushContract\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"staker\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getStakesWithRewards\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"isClosed\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"minStake\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"miner\",\n  \"outputs\": [{\n    \"internalType\": \"address payable\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"minerFee\",\n  \"outputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"\",\n    \"type\": \"uint16\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address payable\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"poolFee\",\n  \"outputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"\",\n    \"type\": \"uint16\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"totalStakes\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"withdrawStakes\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"stateMutability\": \"payable\",\n  \"type\": \"receive\"\n}];\nconst roiABIinterface = [{\n  \"inputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"snapshotNumber\",\n    \"type\": \"uint16\"\n  }],\n  \"name\": \"calculateROI\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"snapshotBalance\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint16\",\n    \"name\": \"snapshotNumber\",\n    \"type\": \"uint16\"\n  }],\n  \"name\": \"takeNewSnapshot\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"timestamp1\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"timestamp2\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"timestamp3\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst poolROIContractAddress = [\"0x0\", \"0x0\", \"0xd00204F286548579eaE01357B22996B44f4b0747\", \"0x035f71F9e800271A9e2A2ec2a45eEAFBb298293C\", \"0x0\", \"0x0\", \"0x0\", \"0x0\"];\nconst poolContractAddress = [\"0x0\", \"0x0\", \"0x94f151BBD12854f93cf92c882B88E3790F407956\", \"0x006631C067D34928F55520511f01A5aBfA0AC67a\", \"0x0\", \"0x0\", \"0x0\", \"0x0\"];\nconst fullShardKey = [\"0000C66c\", \"0001C66c\", \"0002C66c\", \"0003C66c\", \"0004C66c\", \"0005C66c\", \"0006C66c\", \"0007C66c\"];\nconst jrpcUrl = \"http://jrpc.mainnet.quarkchain.io:38391\";\nconst standardShardKeys = [\"00000000\", \"00010000\", \"00020000\", \"00030000\", \"00040000\", \"00050000\", \"00060000\", \"00070000\"];\nlet poolContract = [];\nlet roiContract = [];\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\nlet minerFee = [];\nlet poolFee = [];\n\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let v5;\n  let v6;\n  let v7;\n  web3.qkc.getBalance(poolAddress, function (err, res) {\n    v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].minerFee.call(function (err, res) {\n    minerFee[index] = res / 10000;\n    v2 = res / 100 + \"%\";\n  });\n  poolContract[index].poolFee.call(function (err, res) {\n    poolFee[index] = res / 10000;\n    v3 = res / 100 + \"%\";\n  });\n  poolContract[index].minStake.call(function (err, res) {\n    v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].isClosed.call(function (err, res) {\n    if (res == false) {\n      v5 = \"Open\";\n    }\n\n    if (res == true) {\n      v5 = \"Closed\";\n    }\n  });\n  roiContract[index].calculateROI(1, {}, function (err, res) {\n    let result = (res / 10 ** 16 * (1 - (minerFee[0] + poolFee[0]))).toFixed(3);\n    v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n  });\n\n  if (getUserInformation.address == undefined) {\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\";\n  } else {\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {\n      from: getUserInformation.address\n    }, function (err, res) {\n      v7 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n    });\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        balance: v1,\n        minerFee: v2,\n        poolFee: v3,\n        minStake: v4,\n        status: v5,\n        roi: v6,\n        userStake: v7\n      });\n    }, 2000);\n  });\n}\n\nasync function getUserInformation(web3) {\n  let ad;\n  let balance = [];\n\n  if (web3.currentProvider.isQpocket) {\n    ad = web3.currentProvider.address;\n  } else {\n    ad = await web3.eth.getAccounts()[0];\n  }\n\n  for (let i = 0; i < 8; i++) {\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i]);\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        address: ad,\n        balance: balance\n      });\n    }, 1000);\n  });\n}\n\nfunction Sleep(milliseconds) {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n} //react component using useState for continous variable updates\n\n\n_c = Sleep;\n\nclass PoolInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: '',\n      roi: '',\n      minStake: '',\n      poolStatus: ''\n    };\n  }\n\n  // poolAddress, poolROIAddress, index, miner, web3\n  getContractInformation(poolAddress, poolROIAddress, index) {\n    let web3 = new Web3();\n    QuarkChain.injectWeb3(web3, jrpcUrl);\n    roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n    poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\n    let v1;\n    let v2;\n    let v3;\n    let v4;\n    let v5;\n    let v6;\n    let v7;\n    web3.qkc.getBalance(poolAddress, function (err, res) {\n      v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n    });\n    poolContract[index].minerFee.call(function (err, res) {\n      minerFee[index] = res / 10000;\n      v2 = res / 100 + \"%\";\n    });\n    poolContract[index].poolFee.call(function (err, res) {\n      poolFee[index] = res / 10000;\n      v3 = res / 100 + \"%\";\n    });\n    poolContract[index].minStake.call(function (err, res) {\n      v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n    });\n    poolContract[index].isClosed.call(function (err, res) {\n      if (res == false) {\n        v5 = \"Open\";\n      }\n\n      if (res == true) {\n        v5 = \"Closed\";\n      }\n    });\n    roiContract[index].calculateROI(1, {}, function (err, res) {\n      let result = (res / 10 ** 16 * (1 - (minerFee[0] + poolFee[0]))).toFixed(3);\n      v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n    });\n\n    if (getUserInformation.address == undefined) {\n      v7 = \"You need to ONLY have QPocket installed in order to check your stake\";\n    } else {\n      poolContract[index].getStakesWithRewards(getUserInformation.address, {\n        from: getUserInformation.address\n      }, function (err, res) {\n        v7 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n      });\n    }\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve({\n          balance: v1,\n          minerFee: v2,\n          poolFee: v3,\n          minStake: v4,\n          status: v5,\n          roi: v6,\n          userStake: v7\n        });\n      }, 50);\n    });\n  }\n\n  componentDidMount(props) {\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index).then(data => {\n      this.setState({\n        balance: data.balance,\n        roi: data.roi,\n        minStake: data.minStake,\n        poolStatus: data.status\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress,\n                target: \"_blank\",\n                children: [\"Chain \", this.props.index, \" Pool\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Estimated ROI monthly/annual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.roi\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total Stakes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.balance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Minimum Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.minStake\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Pool Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.poolStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Miner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.props.miner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass poolUserInterface extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass PoolAllocateWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n  }\n\n  componentDidMount(props) {}\n\n  sendTransaction(value) {\n    let rawTx = {\n      value: value,\n      to: this.props.poolAddress,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    };\n    this.props.web3.qkc.sendTransaction(rawTx, function (err, transactionId) {\n      console.log(transactionId);\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Add Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: \"0\",\n              value: this.state.value,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Submit Tx\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Add Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Please make sure that you have a web3 wallet installed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolInterface, PoolAllocateWithdraw };\n\nvar _c;\n\n$RefreshReg$(_c, \"Sleep\");","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/siteComponents.js"],"names":["Web3","QuarkChain","React","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","poolContract","roiContract","web3","injectWeb3","minerFee","poolFee","getContractInformation","poolAddress","poolROIAddress","index","qkc","contract","at","v1","v2","v3","v4","v5","v6","v7","getBalance","err","res","Number","toFixed","toLocaleString","call","minStake","isClosed","calculateROI","result","getUserInformation","address","undefined","getStakesWithRewards","from","Promise","resolve","setTimeout","balance","status","roi","userStake","ad","currentProvider","isQpocket","eth","getAccounts","i","Sleep","milliseconds","PoolInterface","Component","state","poolStatus","componentDidMount","props","then","data","setState","console","log","render","miner","poolUserInterface","PoolAllocateWithdraw","value","sendTransaction","rawTx","to","fromFullShardKey","getFullShardKeyFromQkcAddress","toFullShardKey","gas","gasPrice","transactionId","handleChange","event","target","window","ethereum"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\n//import {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\n\r\nconst ABIinterface = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"}],\"name\":\"adjustMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"amount\",\"type\":\"uint16\"}],\"name\":\"adjustMinerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"amount\",\"type\":\"uint16\"}],\"name\":\"adjustPoolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_miner\",\"type\":\"address\"}],\"name\":\"changeMiner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changePoolStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flushContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"getStakesWithRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isClosed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minerFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawStakes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}]\r\nconst roiABIinterface = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"snapshotNumber\",\"type\":\"uint16\"}],\"name\":\"calculateROI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"snapshotBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"snapshotNumber\",\"type\":\"uint16\"}],\"name\":\"takeNewSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamp3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\r\nconst poolROIContractAddress = [\"0x0\", \"0x0\", \"0xd00204F286548579eaE01357B22996B44f4b0747\", \"0x035f71F9e800271A9e2A2ec2a45eEAFBb298293C\", \"0x0\", \"0x0\", \"0x0\", \"0x0\"];\r\nconst poolContractAddress = [\"0x0\", \"0x0\",\"0x94f151BBD12854f93cf92c882B88E3790F407956\", \"0x006631C067D34928F55520511f01A5aBfA0AC67a\", \"0x0\", \"0x0\", \"0x0\", \"0x0\"];\r\nconst fullShardKey = [\"0000C66c\", \"0001C66c\", \"0002C66c\", \"0003C66c\", \"0004C66c\", \"0005C66c\", \"0006C66c\", \"0007C66c\"];\r\nconst jrpcUrl = \"http://jrpc.mainnet.quarkchain.io:38391\";\r\nconst standardShardKeys = [\"00000000\", \"00010000\", \"00020000\", \"00030000\", \"00040000\", \"00050000\", \"00060000\", \"00070000\"]\r\n\r\nlet poolContract = [];\r\nlet roiContract = [];\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nlet minerFee = [];\r\nlet poolFee = [];\r\n\r\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\r\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n\r\n  let v1;\r\n  let v2;\r\n  let v3;\r\n  let v4;\r\n  let v5;\r\n  let v6;\r\n  let v7;\r\n\r\n  web3.qkc.getBalance(poolAddress, function(err, res) {\r\n    v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].minerFee.call(function(err, res){\r\n    minerFee[index] = res/10000\r\n    v2 = res/100+\"%\";\r\n  });\r\n  poolContract[index].poolFee.call(function(err, res){\r\n    poolFee[index] = res/10000\r\n    v3 = res/100+\"%\";\r\n  });\r\n  poolContract[index].minStake.call(function(err, res){\r\n    v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].isClosed.call(function(err, res){\r\n      if(res == false){\r\n        v5 = \"Open\";\r\n      }\r\n      if(res == true){  \r\n        v5 = \"Closed\";\r\n      }\r\n  });\r\n\r\n  roiContract[index].calculateROI(1, {}, function(err, res) {\r\n\r\n    let result = ((res/10**16)*(1-(minerFee[0] + poolFee[0]))).toFixed(3)\r\n\r\n    v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n  });\r\n\r\n  if(getUserInformation.address == undefined) {\r\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\"\r\n  } else {\r\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {from: getUserInformation.address}, function(err, res) {\r\n      v7 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n    });\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        balance: v1,\r\n        minerFee: v2,\r\n        poolFee: v3,\r\n        minStake: v4,\r\n        status: v5,\r\n        roi: v6,\r\n        userStake: v7\r\n      })\r\n    }, 2000)\r\n  })\r\n}\r\n\r\nasync function getUserInformation(web3) {\r\n  let ad;\r\n  let balance = [];\r\n\r\n  if(web3.currentProvider.isQpocket){\r\n    ad = web3.currentProvider.address;\r\n  } else {\r\n    ad = await web3.eth.getAccounts()[0]\r\n  }\r\n  for(let i=0; i<8; i++) {\r\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i])\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        address: ad,\r\n        balance: balance,\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nfunction Sleep(milliseconds) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\n//react component using useState for continous variable updates\r\nclass PoolInterface extends React.Component {\r\n  // poolAddress, poolROIAddress, index, miner, web3\r\n\r\n  getContractInformation(poolAddress, poolROIAddress, index) {\r\n    let web3 = new Web3();\r\n    QuarkChain.injectWeb3(web3, jrpcUrl)\r\n    roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n    poolContract[index] = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n  \r\n    let v1;\r\n    let v2;\r\n    let v3;\r\n    let v4;\r\n    let v5;\r\n    let v6;\r\n    let v7;\r\n  \r\n    web3.qkc.getBalance(poolAddress, function(err, res) {\r\n      v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n    });\r\n  \r\n    poolContract[index].minerFee.call(function(err, res){\r\n      minerFee[index] = res/10000\r\n      v2 = res/100+\"%\";\r\n    });\r\n    poolContract[index].poolFee.call(function(err, res){\r\n      poolFee[index] = res/10000\r\n      v3 = res/100+\"%\";\r\n    });\r\n    poolContract[index].minStake.call(function(err, res){\r\n      v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n    });\r\n  \r\n    poolContract[index].isClosed.call(function(err, res){\r\n        if(res == false){\r\n          v5 = \"Open\";\r\n        }\r\n        if(res == true){  \r\n          v5 = \"Closed\";\r\n        }\r\n    });\r\n  \r\n    roiContract[index].calculateROI(1, {}, function(err, res) {\r\n  \r\n      let result = ((res/10**16)*(1-(minerFee[0] + poolFee[0]))).toFixed(3)\r\n  \r\n      v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n    });\r\n  \r\n    if(getUserInformation.address == undefined) {\r\n      v7 = \"You need to ONLY have QPocket installed in order to check your stake\"\r\n    } else {\r\n      poolContract[index].getStakesWithRewards(getUserInformation.address, {from: getUserInformation.address}, function(err, res) {\r\n        v7 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n      });\r\n    }\r\n  \r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          balance: v1,\r\n          minerFee: v2,\r\n          poolFee: v3,\r\n          minStake: v4,\r\n          status: v5,\r\n          roi: v6,\r\n          userStake: v7\r\n        })\r\n      }, 50)\r\n    })\r\n  }\r\n\r\n  state = {\r\n    balance : '',\r\n    roi : '',\r\n    minStake : '',\r\n    poolStatus : ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress, this.props.index).then(data => {\r\n      this.setState({balance: data.balance, roi: data.roi, minStake: data.minStake, poolStatus: data.status});\r\n    });\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n                  <th colSpan=\"2\">\r\n                    <a href={\"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress} target=\"_blank\">Chain {this.props.index} Pool</a>\r\n                  </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n                  <td>Estimated ROI monthly/annual</td>\r\n                  <td>{this.state.roi}</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>Total Stakes</td>\r\n                  <td>{this.state.balance}</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>Minimum Stake</td>\r\n                  <td>{this.state.minStake}</td>\r\n              </tr>\r\n              <tr>\r\n                  <td>Pool Status</td>\r\n                  <td>{this.state.poolStatus}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Miner</td>\r\n                <td>{this.props.miner}</td>\r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n    </p>\r\n    )\r\n  }\r\n}\r\n\r\nclass poolUserInterface extends React.Component {\r\n  render() {\r\n    return (\r\n      <a></a>\r\n    )\r\n  }\r\n}\r\n\r\nclass PoolAllocateWithdraw extends React.Component {\r\n  //poolAddress, web3\r\n\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n\r\n  }\r\n\r\n  sendTransaction(value) {\r\n    let rawTx = {\r\n      value: value,\r\n      to: this.props.poolAddress,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n    \r\n    this.props.web3.qkc.sendTransaction(rawTx, function(err, transactionId){\r\n      console.log(transactionId)\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    if(window.ethereum) {\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <td>Add Stake</td>\r\n            <td>\r\n              <input type=\"number\" min=\"0\" value={this.state.value} onChange={this.handleChange} />\r\n            </td>\r\n            <td>\r\n              <button>Submit Tx</button>\r\n            </td>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <tfoot>\r\n            <td>Add Stake</td>\r\n            <td>\r\n              Please make sure that you have a web3 wallet installed\r\n            </td>\r\n            <td>\r\n              Hi\r\n            </td>\r\n          </tfoot>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport {PoolInterface, PoolAllocateWithdraw};"]},"metadata":{},"sourceType":"module"}