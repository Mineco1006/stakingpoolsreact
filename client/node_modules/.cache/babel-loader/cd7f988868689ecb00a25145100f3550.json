{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\siteComponents.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react';\nimport axios from 'axios';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\nlet tx;\n\nfunction metaMaskSignAndSendTx(tx) {\n  const web3js = new Web3(web3.currentProvider);\n  return new Promise(function (resolve, reject) {\n    let from = web3js.eth.accounts[0];\n    let params = [getTypedTx(tx), from];\n    let method = 'eth_signTypedData';\n    web3js.currentProvider.sendAsync({\n      method,\n      params,\n      from\n    }, function (err, result) {\n      if (result.error !== undefined) {\n        return reject(result.error);\n      }\n\n      resolve(result.result);\n    });\n  }.bind(this));\n}\n\nasync function getContractInformation(poolAddress, poolROIAddress) {\n  const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\n  let minerFee;\n  let poolFee;\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let v5;\n  let v6;\n  let v7;\n  web3.qkc.getBalance(poolAddress, function (err, res) {\n    v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract.minerFee.call(function (err, res) {\n    minerFee = res / 10000;\n    v2 = res / 100 + \"%\";\n  });\n  poolContract.poolFee.call(function (err, res) {\n    poolFee = res / 10000;\n    v3 = res / 100 + \"%\";\n  });\n  poolContract.minStake.call(function (err, res) {\n    v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract.isClosed.call(function (err, res) {\n    if (res == false) {\n      v5 = \"Open\";\n    }\n\n    if (res == true) {\n      v5 = \"Closed\";\n    }\n  });\n  roiContract.calculateROI(1, {}, function (err, res) {\n    let result = (res / 10 ** 16 * (1 - (minerFee + poolFee))).toFixed(3);\n    v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n  });\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        balance: v1,\n        minerFee: v2,\n        poolFee: v3,\n        minStake: v4,\n        status: v5,\n        roi: v6,\n        userStake: v7\n      });\n    }, 1000);\n  });\n}\n\nfunction getTypedTx(tx) {\n  var msgParams = [{\n    type: 'uint256',\n    name: 'nonce',\n    value: `0x${tx.nonce.toString('hex')}`\n  }, {\n    type: 'uint256',\n    name: 'gasPrice',\n    value: `0x${tx.gasPrice.toString('hex')}`\n  }, {\n    type: 'uint256',\n    name: 'gasLimit',\n    value: `0x${tx.gasLimit.toString('hex')}`\n  }, {\n    type: 'uint160',\n    name: 'to',\n    value: `${tx.to}`\n  }, {\n    type: 'uint256',\n    name: 'value',\n    value: `0x${tx.value.toString('hex')}`\n  }, {\n    type: 'bytes',\n    name: 'data',\n    value: `0x${tx.data.toString('hex')}`\n  }, {\n    type: 'uint256',\n    name: 'networkId',\n    value: `0x${tx.networkId.toString('hex')}`\n  }, {\n    type: 'uint32',\n    name: 'fromFullShardKey',\n    value: `${tx.fromFullShardKey}`\n  }, {\n    type: 'uint32',\n    name: 'toFullShardKey',\n    value: `${tx.toFullShardKey}`\n  }, {\n    type: 'uint64',\n    name: 'gasTokenId',\n    value: '0x8bb0'\n  }, {\n    type: 'uint64',\n    name: 'transferTokenId',\n    value: '0x8bb0'\n  }, {\n    type: 'string',\n    name: 'qkcDomain',\n    value: 'bottom-quark'\n  }];\n  return msgParams;\n}\n\nclass PoolInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: '',\n      roi: '',\n      minStake: '',\n      poolStatus: ''\n    };\n  }\n\n  componentDidMount(props) {\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress).then(data => {\n      this.setState({\n        balance: data.balance,\n        roi: data.roi,\n        minStake: data.minStake,\n        poolStatus: data.status\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress,\n              target: \"_blank\",\n              children: [\"Chain \", this.props.index, \" Pool\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Estimated ROI monthly/annual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.roi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total Stakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Minimum Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.minStake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pool Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.poolStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Miner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.miner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass poolUserInterface extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nasync function sendTransaction(txParams) {}\n\nclass PoolAllocateWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      add: '',\n      withdraw: '',\n      userAddress: ''\n    };\n  }\n\n  componentDidMount(props) {\n    console.log(this.props);\n    this.setState({\n      userAddress: this.props.web3.currentProvider.address\n    });\n    console.log(this.state.userAddress);\n  }\n\n  async addStakeTx(value) {\n    const txParams = {\n      nonce: await this.props.web3.qkc.getTransactionCount(this.state.userAddress + standardShardKeys[this.props.index]),\n      gasPrice: 2 .toString(16),\n      gasLimit: 350000 .toString(16),\n      to: this.props.poolAddress,\n      // recipient of to address\n      value: (value * 1e18).toString(16),\n      data: \"0x\",\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      networkId: \"0x1\",\n      gasTokenId: \"0x8bb0\",\n      transferTokenId: \"0x8bb0\"\n    };\n    console.log(this.state.userAddress);\n    let signedTx = await this.props.web3.eth.sign(txParams, this.state.userAddress);\n    console.log(signedTx);\n  }\n\n  withdrawStake() {\n    let rawTx = {\n      value: this.state.withdraw * 10 ** 18,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      gas: 350000,\n      gasPrice: 2\n    };\n  }\n\n  test() {\n    console.log(\"test\");\n  }\n\n  handleAddChange(event) {\n    this.setState({\n      add: event.target.value\n    });\n  }\n\n  handleWithdrawChange(event) {\n    this.setState({\n      withdraw: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Add Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.add,\n                onChange: e => this.handleAddChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => this.addStakeTx(this.state.add),\n                children: \"Add Stake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.withdraw,\n                onChange: e => this.handleWithdrawChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.withdrawStake,\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: \"Please make sure that you have a web3 wallet installed in your browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolInterface, PoolAllocateWithdraw };","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/siteComponents.js"],"names":["Web3","QuarkChain","React","axios","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","web3","injectWeb3","tx","metaMaskSignAndSendTx","web3js","currentProvider","Promise","resolve","reject","from","eth","accounts","params","getTypedTx","method","sendAsync","err","result","error","undefined","bind","getContractInformation","poolAddress","poolROIAddress","roiContract","qkc","contract","at","poolContract","minerFee","poolFee","v1","v2","v3","v4","v5","v6","v7","getBalance","res","Number","toFixed","toLocaleString","call","minStake","isClosed","calculateROI","setTimeout","balance","status","roi","userStake","msgParams","type","name","value","nonce","toString","gasPrice","gasLimit","to","data","networkId","fromFullShardKey","toFullShardKey","PoolInterface","Component","state","poolStatus","componentDidMount","props","then","setState","console","log","render","index","miner","poolUserInterface","sendTransaction","txParams","PoolAllocateWithdraw","add","withdraw","userAddress","address","addStakeTx","getTransactionCount","getFullShardKeyFromQkcAddress","gasTokenId","transferTokenId","signedTx","sign","withdrawStake","rawTx","gas","test","handleAddChange","event","target","handleWithdrawChange","window","ethereum","e"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\n\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nlet tx;\r\n\r\nfunction metaMaskSignAndSendTx(tx) {\r\n  const web3js = new Web3(web3.currentProvider)\r\n  return new Promise(function(resolve, reject) {\r\n    let from = web3js.eth.accounts[0]\r\n    let params = [getTypedTx(tx), from]\r\n    let method = 'eth_signTypedData'\r\n\r\n    web3js.currentProvider.sendAsync({\r\n      method,\r\n      params,\r\n      from,\r\n    }, function (err, result) {\r\n      if(result.error !== undefined) {\r\n        return reject(result.error)\r\n      }\r\n      resolve(result.result)\r\n    })\r\n  }.bind(this))\r\n}\r\n\r\nasync function getContractInformation(poolAddress, poolROIAddress) {\r\n  const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n  let minerFee;\r\n  let poolFee;\r\n\r\n  let v1;\r\n  let v2;\r\n  let v3;\r\n  let v4;\r\n  let v5;\r\n  let v6;\r\n  let v7;\r\n\r\n  web3.qkc.getBalance(poolAddress, function(err, res) {\r\n    v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract.minerFee.call(function(err, res){\r\n    minerFee = res/10000\r\n    v2 = res/100+\"%\";\r\n  });\r\n  poolContract.poolFee.call(function(err, res){\r\n    poolFee = res/10000\r\n    v3 = res/100+\"%\";\r\n  });\r\n  poolContract.minStake.call(function(err, res){\r\n    v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract.isClosed.call(function(err, res){\r\n      if(res == false){\r\n        v5 = \"Open\";\r\n      }\r\n      if(res == true){  \r\n        v5 = \"Closed\";\r\n      }\r\n  });\r\n\r\n  roiContract.calculateROI(1, {}, function(err, res) {\r\n    let result = ((res/10**16)*(1-(minerFee + poolFee))).toFixed(3)\r\n    v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n  });\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        balance: v1,\r\n        minerFee: v2,\r\n        poolFee: v3,\r\n        minStake: v4,\r\n        status: v5,\r\n        roi: v6,\r\n        userStake: v7\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nfunction getTypedTx(tx) {\r\n  var msgParams = [\r\n    {\r\n      type: 'uint256',\r\n      name: 'nonce',\r\n      value: `0x${tx.nonce.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'gasPrice',\r\n      value: `0x${tx.gasPrice.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'gasLimit',\r\n      value: `0x${tx.gasLimit.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'uint160',\r\n      name: 'to',\r\n      value: `${tx.to}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'value',\r\n      value: `0x${tx.value.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'bytes',\r\n      name: 'data',\r\n      value: `0x${tx.data.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'uint256',\r\n      name: 'networkId',\r\n      value: `0x${tx.networkId.toString('hex')}`\r\n    },\r\n    {\r\n      type: 'uint32',\r\n      name: 'fromFullShardKey',\r\n      value: `${tx.fromFullShardKey}`\r\n    },\r\n    {\r\n      type: 'uint32',\r\n      name: 'toFullShardKey',\r\n      value: `${tx.toFullShardKey}`\r\n    },\r\n    {\r\n      type: 'uint64',\r\n      name: 'gasTokenId',\r\n      value: '0x8bb0'\r\n    },\r\n    {\r\n      type: 'uint64',\r\n      name: 'transferTokenId',\r\n      value: '0x8bb0'\r\n    },\r\n    {\r\n      type: 'string',\r\n      name: 'qkcDomain',\r\n      value: 'bottom-quark'\r\n    }\r\n  ];\r\n  return msgParams;\r\n}\r\n\r\nclass PoolInterface extends React.Component {\r\n  // poolAddress, poolROIAddress, index, miner, web3\r\n\r\n  state = {\r\n    balance : '',\r\n    roi : '',\r\n    minStake : '',\r\n    poolStatus : ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress).then(data => {\r\n      this.setState({balance: data.balance, roi: data.roi, minStake: data.minStake, poolStatus: data.status});\r\n    });\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n                <th colSpan=\"2\">\r\n                  <a href={\"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress} target=\"_blank\">Chain {this.props.index} Pool</a>\r\n                </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n                <td>Estimated ROI monthly/annual</td>\r\n                <td>{this.state.roi}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Stakes</td>\r\n                <td>{this.state.balance}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Minimum Stake</td>\r\n                <td>{this.state.minStake}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Pool Status</td>\r\n                <td>{this.state.poolStatus}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Miner</td>\r\n              <td>{this.props.miner}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nclass poolUserInterface extends React.Component {\r\n  render() {\r\n    return (\r\n      <a></a>\r\n    )\r\n  }\r\n}\r\n\r\nasync function sendTransaction(txParams) {\r\n\r\n}\r\n\r\nclass PoolAllocateWithdraw extends React.Component {\r\n  //poolAddress, web3, index\r\n\r\n  state = {\r\n    add: '',\r\n    withdraw: '',\r\n    userAddress: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    console.log(this.props)\r\n    this.setState({userAddress: this.props.web3.currentProvider.address})\r\n    console.log(this.state.userAddress)\r\n  }\r\n\r\n  async addStakeTx(value) {\r\n\r\n    const txParams = {\r\n      nonce: await this.props.web3.qkc.getTransactionCount(this.state.userAddress + standardShardKeys[this.props.index]),\r\n      gasPrice: (2).toString(16),\r\n      gasLimit: (350000).toString(16),\r\n      to: this.props.poolAddress,  // recipient of to address\r\n      value: (value*1e18).toString(16),\r\n      data: \"0x\",\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      networkId: \"0x1\",\r\n      gasTokenId: \"0x8bb0\",\r\n      transferTokenId: \"0x8bb0\"\r\n  }\r\n\r\n  console.log(this.state.userAddress)\r\n\r\n  let signedTx = await this.props.web3.eth.sign(txParams, this.state.userAddress)\r\n  console.log(signedTx)\r\n  }\r\n\r\n\r\n\r\n  withdrawStake() {\r\n    let rawTx = {\r\n      value: this.state.withdraw*10**18,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      gas: 350000,\r\n      gasPrice: 2\r\n    }\r\n  }\r\n\r\n  test() {\r\n    console.log(\"test\")\r\n  }\r\n\r\n  handleAddChange(event) {\r\n    this.setState({add: event.target.value});\r\n  }\r\n  handleWithdrawChange(event) {\r\n    this.setState({withdraw: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    if(window.ethereum) {\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Add Stake</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.add} onChange={e => this.handleAddChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" onClick={() => this.addStakeTx(this.state.add)}>Add Stake</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Withdraw</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.withdraw} onChange={e => this.handleWithdrawChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={ () => this.withdrawStake}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <tfoot>\r\n            Please make sure that you have a web3 wallet installed in your browser\r\n          </tfoot>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport {PoolInterface, PoolAllocateWithdraw};"]},"metadata":{},"sourceType":"module"}