{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\siteComponents.js\";\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport React from 'react';\nimport axios from 'axios';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config.js';\nimport { metaMaskSignTyped, getDeviceType, sendRawTx } from '../functionCol/lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\n\nasync function getContractInformation(poolAddress, poolROIAddress) {\n  const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\n  let minerFee;\n  let poolFee;\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let v5;\n  let v6;\n  let v7;\n  web3.qkc.getBalance(poolAddress, function (err, res) {\n    v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract.minerFee.call(function (err, res) {\n    minerFee = res / 10000;\n    v2 = res / 100 + \"%\";\n  });\n  poolContract.poolFee.call(function (err, res) {\n    poolFee = res / 10000;\n    v3 = res / 100 + \"%\";\n  });\n  poolContract.minStake.call(function (err, res) {\n    v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract.isClosed.call(function (err, res) {\n    if (res == false) {\n      v5 = \"Open\";\n    }\n\n    if (res == true) {\n      v5 = \"Closed\";\n    }\n  });\n  roiContract.calculateROI(1, {}, function (err, res) {\n    let result = (res / 10 ** 16 * (1 - (minerFee + poolFee))).toFixed(3);\n    v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n  });\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        balance: v1,\n        minerFee: v2,\n        poolFee: v3,\n        minStake: v4,\n        status: v5,\n        roi: v6,\n        userStake: v7\n      });\n    }, 1500);\n  });\n}\n\nasync function getUserStake(poolAddress, userAddress) {\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\n  let stake;\n  poolContract.getStakesWithRewards(userAddress, {\n    from: userAddress\n  }, function (err, res) {\n    stake = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(stake);\n    }, 1500);\n  });\n}\n\nclass PoolInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      balance: '',\n      roi: '',\n      minStake: '',\n      poolStatus: ''\n    };\n  }\n\n  componentDidMount(props) {\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress).then(data => {\n      this.setState({\n        balance: data.balance,\n        roi: data.roi,\n        minStake: data.minStake,\n        poolStatus: data.status\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress,\n              target: \"_blank\",\n              children: [\"Chain \", this.props.index, \" Pool\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Estimated ROI monthly/annual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.roi\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Total Stakes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Minimum Stake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.minStake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Pool Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.state.poolStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Miner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: this.props.miner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"poolUserInterface\", {\n        poolAddress: this.props.poolAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass poolUserInterface extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAddress: '',\n      stake: ''\n    };\n  }\n\n  componentDidMount(props) {\n    if (window.web3) {\n      this.props.web3.eth.getAccounts().then(function (accounts) {\n        console.log(accounts);\n        this.setState({\n          userAddress: accounts[0]\n        });\n      }.bind(this));\n      getUserStake(this.props.poolAddress, this.state.userAddress).then(function (res) {\n        this.setState({\n          stake: res\n        });\n      });\n    }\n  }\n\n  render() {\n    if (window.web3) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Your Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: this.state.userAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Please enable your web3 wallet to check your stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nclass PoolAllocateWithdraw extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      add: '',\n      withdraw: '',\n      userAddress: '',\n      poolContract: ''\n    };\n  }\n\n  componentDidMount(props) {\n    if (window.web3) {\n      this.props.web3.eth.getAccounts().then(function (accounts) {\n        console.log(accounts);\n        this.setState({\n          userAddress: accounts[0]\n        });\n      }.bind(this));\n      this.setState({\n        poolContract: this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress)\n      });\n      console.log(this.state.poolContract);\n      console.log(this.props.web3);\n      console.log(this.state.userAddress);\n    }\n  }\n\n  async addStakeTx(value) {\n    const txParams = {\n      nonce: await this.props.web3.qkc.getTransactionCount(this.state.userAddress + standardShardKeys[this.props.index]),\n      gasPrice: 2,\n      gasLimit: 350000,\n      to: QuarkChain.getEthAddressFromQkcAddress(this.props.poolAddress),\n      // recipient of to address\n      from: this.state.userAddress,\n      value: value * 1e18,\n      data: 0,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress)\n    };\n    let rawTx = await metaMaskSignTyped(txParams, this.props.web3, this.state.userAddress);\n    sendRawTx(rawTx);\n    console.log(this.state.userAddress);\n  }\n\n  withdrawStake() {\n    console.log(this.state.withdraw);\n    console.log(this.state.poolContract);\n    this.state.poolContract.withdrawStakes.sendTransaction(this.state.withdraw, {\n      from: this.state.userAddress,\n      gas: 350000,\n      gasPrice: 2,\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress)\n    }).then(function (err, res) {\n      console.log(err);\n      console.log(res);\n    });\n  }\n\n  test() {\n    console.log(\"test\");\n  }\n\n  handleAddChange(event) {\n    this.setState({\n      add: event.target.value\n    });\n  }\n\n  handleWithdrawChange(event) {\n    this.setState({\n      withdraw: event.target.value\n    });\n  }\n\n  render() {\n    if (window.ethereum) {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Your Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: this.state.userAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Add Stake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.add,\n                onChange: e => this.handleAddChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => this.addStakeTx(this.state.add),\n                children: \"Add Stake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Withdraw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                value: this.state.withdraw,\n                onChange: e => this.handleWithdrawChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.withdrawStake.bind(this),\n                children: \"Submit Tx\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: \"Please make sure that you have a web3 wallet installed in your browser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport { PoolInterface, PoolAllocateWithdraw };","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/siteComponents.js"],"names":["Web3","QuarkChain","React","axios","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","metaMaskSignTyped","getDeviceType","sendRawTx","web3","injectWeb3","getContractInformation","poolAddress","poolROIAddress","roiContract","qkc","contract","at","poolContract","minerFee","poolFee","v1","v2","v3","v4","v5","v6","v7","getBalance","err","res","Number","toFixed","toLocaleString","call","minStake","isClosed","calculateROI","result","Promise","resolve","setTimeout","balance","status","roi","userStake","getUserStake","userAddress","stake","getStakesWithRewards","from","PoolInterface","Component","state","poolStatus","componentDidMount","props","then","data","setState","console","log","render","index","miner","poolUserInterface","window","eth","getAccounts","accounts","bind","PoolAllocateWithdraw","add","withdraw","addStakeTx","value","txParams","nonce","getTransactionCount","gasPrice","gasLimit","to","getEthAddressFromQkcAddress","fromFullShardKey","getFullShardKeyFromQkcAddress","toFullShardKey","rawTx","withdrawStake","withdrawStakes","sendTransaction","gas","test","handleAddChange","event","target","handleWithdrawChange","ethereum","e"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config.js'\r\nimport {metaMaskSignTyped, getDeviceType, sendRawTx} from '../functionCol/lib'\r\n\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nasync function getContractInformation(poolAddress, poolROIAddress) {\r\n  const roiContract = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n  let minerFee;\r\n  let poolFee;\r\n\r\n  let v1;\r\n  let v2;\r\n  let v3;\r\n  let v4;\r\n  let v5;\r\n  let v6;\r\n  let v7;\r\n\r\n  web3.qkc.getBalance(poolAddress, function(err, res) {\r\n    v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract.minerFee.call(function(err, res){\r\n    minerFee = res/10000\r\n    v2 = res/100+\"%\";\r\n  });\r\n  poolContract.poolFee.call(function(err, res){\r\n    poolFee = res/10000\r\n    v3 = res/100+\"%\";\r\n  });\r\n  poolContract.minStake.call(function(err, res){\r\n    v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract.isClosed.call(function(err, res){\r\n      if(res == false){\r\n        v5 = \"Open\";\r\n      }\r\n      if(res == true){  \r\n        v5 = \"Closed\";\r\n      }\r\n  });\r\n\r\n  roiContract.calculateROI(1, {}, function(err, res) {\r\n    let result = ((res/10**16)*(1-(minerFee + poolFee))).toFixed(3)\r\n    v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n  });\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        balance: v1,\r\n        minerFee: v2,\r\n        poolFee: v3,\r\n        minStake: v4,\r\n        status: v5,\r\n        roi: v6,\r\n        userStake: v7\r\n      })\r\n    }, 1500)\r\n  })\r\n}\r\n\r\nasync function getUserStake(poolAddress, userAddress) {\r\n  const poolContract = web3.qkc.contract(ABIinterface).at(poolAddress);\r\n\r\n  let stake\r\n\r\n  poolContract.getStakesWithRewards(userAddress, {from: userAddress}, function(err, res) {\r\n    stake = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n  });\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(stake)\r\n    }, 1500)\r\n  })\r\n}\r\n\r\nclass PoolInterface extends React.Component {\r\n  // poolAddress, poolROIAddress, index, miner, web3\r\n\r\n  state = {\r\n    balance : '',\r\n    roi : '',\r\n    minStake : '',\r\n    poolStatus : ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    getContractInformation(this.props.poolAddress, this.props.poolROIAddress).then(data => {\r\n      this.setState({balance: data.balance, roi: data.roi, minStake: data.minStake, poolStatus: data.status});\r\n    });\r\n    console.log(this.props)\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n                <th colSpan=\"2\">\r\n                  <a href={\"https://mainnet.quarkchain.io/address/\" + this.props.poolAddress} target=\"_blank\">Chain {this.props.index} Pool</a>\r\n                </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n                <td>Estimated ROI monthly/annual</td>\r\n                <td>{this.state.roi}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Total Stakes</td>\r\n                <td>{this.state.balance}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Minimum Stake</td>\r\n                <td>{this.state.minStake}</td>\r\n            </tr>\r\n            <tr>\r\n                <td>Pool Status</td>\r\n                <td>{this.state.poolStatus}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Miner</td>\r\n              <td>{this.props.miner}</td>\r\n            </tr>\r\n        </tbody>\r\n        <poolUserInterface poolAddress={this.props.poolAddress}/>\r\n      </table>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nclass poolUserInterface extends React.Component {\r\n  //poolAddress\r\n\r\n  state= {\r\n    userAddress: '',\r\n    stake: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    if(window.web3) {\r\n      this.props.web3.eth.getAccounts().then(function(accounts) {\r\n      console.log(accounts)\r\n      this.setState({userAddress: accounts[0]})\r\n    }.bind(this))\r\n\r\n    getUserStake(this.props.poolAddress, this.state.userAddress).then(function(res) {\r\n      this.setState({stake: res})\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(window.web3){\r\n      return (\r\n        <tr>\r\n          <td>\r\n            Your Address\r\n          </td>\r\n          <td>\r\n            {this.state.userAddress}\r\n          </td>\r\n        </tr>\r\n    )\r\n    }else{\r\n      return (\r\n          <tr>\r\n            <td>\r\n              Please enable your web3 wallet to check your stake\r\n            </td>\r\n          </tr>\r\n      )\r\n    }\r\n    \r\n  }\r\n}\r\n\r\n\r\n\r\nclass PoolAllocateWithdraw extends React.Component {\r\n  //poolAddress, web3, index\r\n\r\n  state = {\r\n    add: '',\r\n    withdraw: '',\r\n    userAddress: '',\r\n    poolContract: ''\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    if(window.web3) {\r\n      this.props.web3.eth.getAccounts().then(function(accounts) {\r\n      console.log(accounts)\r\n      this.setState({userAddress: accounts[0]})\r\n    }.bind(this))\r\n    this.setState({poolContract: this.props.web3.qkc.contract(ABIinterface).at(this.props.poolAddress)})\r\n\r\n    console.log(this.state.poolContract)\r\n    console.log(this.props.web3)\r\n    console.log(this.state.userAddress)\r\n    }\r\n  }\r\n\r\n  async addStakeTx(value) {\r\n\r\n    const txParams = {\r\n      nonce: await this.props.web3.qkc.getTransactionCount(this.state.userAddress + standardShardKeys[this.props.index]),\r\n      gasPrice: 2,\r\n      gasLimit: 350000,\r\n      to: QuarkChain.getEthAddressFromQkcAddress(this.props.poolAddress),  // recipient of to address\r\n      from: this.state.userAddress,\r\n      value: value*1e18,\r\n      data: 0,\r\n      fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n      toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress),\r\n  }\r\n\r\n  let rawTx = await metaMaskSignTyped(txParams, this.props.web3, this.state.userAddress);\r\n\r\n  sendRawTx(rawTx);\r\n\r\n  console.log(this.state.userAddress)\r\n  }\r\n\r\n\r\n\r\n  withdrawStake() {\r\n    console.log(this.state.withdraw)\r\n    console.log(this.state.poolContract)\r\n    this.state.poolContract.withdrawStakes.sendTransaction(this.state.withdraw, {from: this.state.userAddress, gas: 350000, gasPrice: 2, fromFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress), toFullShardKey: QuarkChain.getFullShardKeyFromQkcAddress(this.props.poolAddress)}).then(function(err, res) {\r\n      console.log(err)\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  test() {\r\n    console.log(\"test\")\r\n  }\r\n\r\n  handleAddChange(event) {\r\n    this.setState({add: event.target.value});\r\n  }\r\n  handleWithdrawChange(event) {\r\n    this.setState({withdraw: event.target.value});\r\n  }\r\n  \r\n  render() {\r\n    if(window.ethereum) {\r\n      return (\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Your Address</td>\r\n              <td>{this.state.userAddress}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Add Stake</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.add} onChange={e => this.handleAddChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button type=\"button\" onClick={() => this.addStakeTx(this.state.add)}>Add Stake</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Withdraw</td>\r\n              <td>\r\n                <input type=\"number\" min=\"0\" value={this.state.withdraw} onChange={e => this.handleWithdrawChange(e)} />\r\n              </td>\r\n              <td>\r\n                <button onClick={this.withdrawStake.bind(this)}>Submit Tx</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )\r\n    } else {\r\n      return (\r\n        <table>\r\n          <tfoot>\r\n            Please make sure that you have a web3 wallet installed in your browser\r\n          </tfoot>\r\n        </table>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport {PoolInterface, PoolAllocateWithdraw};"]},"metadata":{},"sourceType":"module"}