{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nico\\\\Documents\\\\GitHub\\\\quarkchainposwapp\\\\app\\\\src\\\\components\\\\web3Component.js\";\nimport React, { useCallback } from 'react';\nimport Web3 from 'web3';\nimport QuarkChain from 'quarkchain-web3';\nimport { ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet poolContract = [];\nlet roiContract = [];\nlet web3 = new Web3();\nQuarkChain.injectWeb3(web3, jrpcUrl);\nlet minerFee = [];\nlet poolFee = [];\n\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(address);\n  let v1;\n  let v2;\n  let v3;\n  let v4;\n  let v5;\n  let v6;\n  let v7;\n  web3.qkc.getBalance(address, function (err, res) {\n    v1 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].minerFee.call(function (err, res) {\n    minerFee[index] = res / 10000;\n    v2 = res / 100 + \"%\";\n  });\n  poolContract[index].poolFee.call(function (err, res) {\n    poolFee[index] = res / 10000;\n    v3 = res / 100 + \"%\";\n  });\n  poolContract[index].minStake.call(function (err, res) {\n    v4 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n  });\n  poolContract[index].isClosed.call(function (err, res) {\n    if (res == false) {\n      v5 = \"Open\";\n    }\n\n    if (res == true) {\n      v5 = \"Closed\";\n    }\n  });\n  roiContract[index].calculateROI(1, {}, function (err, res) {\n    let result = (res / 10 ** 16 * (1 - (minerFee[0] + poolFee[0]))).toFixed(3);\n    v6 = result + \"% / \" + (result * 12).toFixed(1) + \"%\";\n  });\n\n  if (getUserInformation.address == undefined) {\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\";\n  } else {\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {\n      from: getUserInformation.address\n    }, function (err, res) {\n      v7 = Number((res / 10 ** 18).toFixed(2)).toLocaleString() + \" QKC\";\n    });\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        balance: v1,\n        minerFee: v2,\n        poolFee: v3,\n        minStake: v4,\n        status: v5,\n        roi: v6,\n        userStake: v7\n      });\n    }, 1000);\n  });\n}\n\nasync function getUserInformation(web3) {\n  let ad;\n  let balance = [];\n\n  if (web3.currentProvider.isQpocket) {\n    ad = await web3.currentProvider.address;\n  } else {\n    ad = await web3.eth.getAccounts()[0];\n  }\n\n  for (i = 0; i < 8; i++) {\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i]);\n  }\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        address: ad,\n        balance: balance\n      });\n    }, 1000);\n  });\n}\n\nfunction Sleep(milliseconds) {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n\n_c = Sleep;\nexport default async function poolOutput(poolAddress, poolROIAddress, index, web3) {\n  let poolInformation = await getContractInformation(poolAddress, poolROIAddress, index);\n  let userInformation = await getUserInformation(web3);\n  await Sleep(1500);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colspan: \"2\",\n          children: [\"Chain \", index, \" Pool\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Estimated ROI monthly/annual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"roi0\",\n          children: poolInformation.roi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Total Stakes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"totalStakes0\",\n          children: poolInformation.balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Miner Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"minerFee0\",\n          children: poolInformation.minerFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Pool Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"poolFee0\",\n          children: poolInformation.poolFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Minimum Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"minStake0\",\n          children: poolInformation.minStake\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Pool Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"status0\",\n          children: poolInformation.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Your Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"stake0\",\n          children: userInformation.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Your Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          id: \"stake0\",\n          children: poolInformation.userStake\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Sleep\");","map":{"version":3,"sources":["C:/Users/Nico/Documents/GitHub/quarkchainposwapp/app/src/components/web3Component.js"],"names":["React","useCallback","Web3","QuarkChain","ABIinterface","roiABIinterface","poolROIContractAddress","poolContractAddress","fullShardKey","jrpcUrl","standardShardKeys","poolContract","roiContract","web3","injectWeb3","minerFee","poolFee","getContractInformation","poolAddress","poolROIAddress","index","qkc","contract","at","address","v1","v2","v3","v4","v5","v6","v7","getBalance","err","res","Number","toFixed","toLocaleString","call","minStake","isClosed","calculateROI","result","getUserInformation","undefined","getStakesWithRewards","from","Promise","resolve","setTimeout","balance","status","roi","userStake","ad","currentProvider","isQpocket","eth","getAccounts","i","Sleep","milliseconds","poolOutput","poolInformation","userInformation"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport Web3 from 'web3';\r\nimport QuarkChain from 'quarkchain-web3';\r\nimport {ABIinterface, roiABIinterface, poolROIContractAddress, poolContractAddress, fullShardKey, jrpcUrl, standardShardKeys} from './config'\r\n\r\nlet poolContract = [];\r\nlet roiContract = [];\r\nlet web3 = new Web3();\r\nQuarkChain.injectWeb3(web3, jrpcUrl)\r\n\r\nlet minerFee = [];\r\nlet poolFee = [];\r\n\r\nasync function getContractInformation(poolAddress, poolROIAddress, index) {\r\n  roiContract[index] = web3.qkc.contract(roiABIinterface).at(poolROIAddress);\r\n  poolContract[index] = web3.qkc.contract(ABIinterface).at(address);\r\n\r\n  let v1;\r\n  let v2;\r\n  let v3;\r\n  let v4;\r\n  let v5;\r\n  let v6;\r\n  let v7;\r\n\r\n  web3.qkc.getBalance(address, function(err, res) {\r\n    v1 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].minerFee.call(function(err, res){\r\n    minerFee[index] = res/10000\r\n    v2 = res/100+\"%\";\r\n  });\r\n  poolContract[index].poolFee.call(function(err, res){\r\n    poolFee[index] = res/10000\r\n    v3 = res/100+\"%\";\r\n  });\r\n  poolContract[index].minStake.call(function(err, res){\r\n    v4 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\";\r\n  });\r\n\r\n  poolContract[index].isClosed.call(function(err, res){\r\n      if(res == false){\r\n        v5 = \"Open\";\r\n      }\r\n      if(res == true){\r\n        v5 = \"Closed\";\r\n      }\r\n  });\r\n\r\n  roiContract[index].calculateROI(1, {}, function(err, res) {\r\n\r\n    let result = ((res/10**16)*(1-(minerFee[0] + poolFee[0]))).toFixed(3)\r\n\r\n    v6 = result + \"% / \" + (result*12).toFixed(1) + \"%\";\r\n  });\r\n\r\n  if(getUserInformation.address == undefined) {\r\n    v7 = \"You need to ONLY have QPocket installed in order to check your stake\"\r\n  } else {\r\n    poolContract[index].getStakesWithRewards(getUserInformation.address, {from: getUserInformation.address}, function(err, res) {\r\n      v7 = Number((res/10**18).toFixed(2)).toLocaleString() + \" QKC\"\r\n    });\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        balance: v1,\r\n        minerFee: v2,\r\n        poolFee: v3,\r\n        minStake: v4,\r\n        status: v5,\r\n        roi: v6,\r\n        userStake: v7,\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nasync function getUserInformation(web3) {\r\n  let ad;\r\n  let balance = [];\r\n\r\n  if(web3.currentProvider.isQpocket){\r\n    ad = await web3.currentProvider.address;\r\n  } else {\r\n    ad = await web3.eth.getAccounts()[0]\r\n  }\r\n\r\n  for(i=0; i<8; i++) {\r\n    balance[i] += await web3.qkc.getBalance(ad + standardShardKeys[i])\r\n  }\r\n\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve({\r\n        address: ad,\r\n        balance: balance,\r\n      })\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nfunction Sleep(milliseconds) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\nexport default async function poolOutput(poolAddress, poolROIAddress, index, web3) {\r\n  let poolInformation = await getContractInformation(poolAddress, poolROIAddress, index);\r\n  let userInformation = await getUserInformation(web3);\r\n  await Sleep(1500)\r\n  \r\n  return (\r\n    <p>\r\n      <table>\r\n          <tr>\r\n              <th colspan=\"2\">Chain {index} Pool</th>\r\n          </tr>\r\n          <tr>\r\n              <td>Estimated ROI monthly/annual</td>\r\n              <td id=\"roi0\">{poolInformation.roi}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Total Stakes</td>\r\n              <td id=\"totalStakes0\">{poolInformation.balance}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Miner Fee</td>\r\n              <td id=\"minerFee0\">{poolInformation.minerFee}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Pool Fee</td>\r\n              <td id=\"poolFee0\">{poolInformation.poolFee}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Minimum Stake</td>\r\n              <td id=\"minStake0\">{poolInformation.minStake}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Pool Status</td>\r\n              <td id=\"status0\">{poolInformation.status}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Your Address</td>\r\n              <td id=\"stake0\">{userInformation.address}</td>\r\n          </tr>\r\n          <tr>\r\n              <td>Your Stake</td>\r\n              <td id=\"stake0\">{poolInformation.userStake}</td>\r\n          </tr>\r\n      </table>\r\n    </p>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}